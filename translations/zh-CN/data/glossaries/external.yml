---
- 
  term: '@提及'
  description: 在用户名前使用 `@` 通知 GitHub 上的个人。GitHub 上组织中的用户也可成为团队的一部分被提及。
- 
  term: 访问令牌
  description: >-
    在命令行或 API 上执行 HTTPS 上的 Git 操作时，用来代替密码的令牌，也称为个人访问令牌。
- 
  term: 帐户恢复令牌
  description: >-
    作为帐户恢复设置一部分存储的身份验证凭据称为“异地恢复帐户”，用于存储此备份凭据。
- 
  term: API 预览
  description: >-
    一种尝试新 API 以及在现有 API 方法成为正式 GitHub API 之前对其进行更改的方式。
- 
  term: 设备
  description: >-
    一种结合恰当操作系统 (JeOS) 在行业标准硬件（通常是服务器）上或虚拟机中最佳运行的软件应用程序。
- 
  term: assignee
  description: 分配到某个议题的用户。
- 
  term: 验证码
  description: >-
    在使用 2FA 通过浏览器登录时，除了 GitHub 密码之外您还要提供的一种代码。此代码由应用程序生成，或通过短信发送到手机，也称为“2FA 验证码”。
- 
  term: 基础分支
  description: 在合并拉取请求时将变更并入其中的分支。创建拉取请求时，如果需要，可以将基础分支从仓库的默认分支更改为另一个分支。
- 
  term: 基本验证
  description: >-
    凭据以未加密文本形式发送的身份验证方法。
- 
  term: 个人简历
  description: >-
    个人资料中用户生成的描述：[为个人资料添加简介](/articles/adding-a-bio-to-your-profile)
- 
  term: 结算周期
  description: 特定结算方案的时间间隔。
- 
  term: 帐单邮箱
  description: >-
    GitHub 用于发送收据、信用卡或 PayPal 费用及其他帐单相关通信的组织电子邮件地址。
- 
  term: 帐单管理员
  description: 负责管理组织帐单设置的组织成员。
- 
  term: 结算方案
  description: >-
    用户和组织的付款方案，包括为每种方案类型设置的功能。
- 
  term: 追溯
  description: >-
    Git 中的“追溯”功能描述对文件每行的最新修改，一般会显示修订、作者和时间。这很有用，例如，可以跟踪何时添加了功能，或者哪个提交导致了特定漏洞。
- 
  term: 阻止
  description: >-
    用于删除用户协作处理组织仓库的能力。
- 
  term: 分支
  description: >-
    分支是仓库的平行版本。它包含在仓库中，但不影响主要或 master 分支，可让您自由工作而不中断“即时”版本。在执行所需的更改后，可以将分支合并回 master 分支以发布更改。
- 
  term: 分支限制
  description: >-
    仓库管理员可以启用的一种限制，只允许特定用户或团队推送到分支或做出特定的更改。
- 
  term: 业务计划
  description: >-
    一种组织结算方案，您可以协作处理无限的公共和私有仓库，允许或要求组织成员使用 SAML SSO 向 GitHub 验证，以及使用 SAML 或 SCIM 配置和撤销配置访问。
- 
  term: CA 证书
  description: >-
    证书机构 (CA) 颁发的一种数字证书，用于确保有效连接两台机器，例如用户的计算机和 GitHub.com，以及验证站点的所有权。
- 
  term: 卡
  description: 项目板中与某个议题或拉取请求关联的可移动方框。
- 
  term: 检查
  description: >-
    检查是指 {% data variables.product.product_name %} 上的一种状态检查。请参阅“[状态检查](#status-checks)”。
- 
  term: 检出
  description: >-
    您可以在命令行上使用 `git checkout` 创建新分支，将当前的工作分支更改为不同的分支，甚至使用 `git checkout [branchname] [path to file]` 从不同的分支切换到不同版本的文件。“检出”操作会使用对象数据库中的树对象或 blob 更新工作树的全部或部分，以及更新索引和 HEAD（如果整个工作树指向新分支）。
- 
  term: 优选
  description: >-
    从一系列更改（通常是提交）中选择一部分更改，并在不同的代码库上将它们记录为新的更改系列。在 Git 中，这通过 `git cherry-pick` 命令来执行，在另一个分支上解压缩现有提交引入的更改，并根据当前分支的提示将其记录为新提交。更多信息请参阅 Git 文档中的 [git-cherry-pick](https://git-scm.com/docs/git-cherry-pick)。
- 
  term: 子团队
  description: >-
    在嵌套团队内，继承父团队访问权限和 @提及的子团队。
- 
  term: 清洁
  description: >-
    如果工作树与当前 HEAD 引用 的版本对应，则工作树是清洁的。另请参阅“脏”。
- 
  term: 克隆
  description: >-
    克隆是指存在于计算机上而非网站服务器其他位置的仓库副本，或者是复制的操作。在克隆时，可在首选编辑器中编辑文件，使用 Git 跟踪更改而无需保持在线。您克隆的仓库仍与远程版本连接，以便当您在线时将本地更改推送到远程，以保持同步。
- 
  term: 集群
  description: >-
    在多个节点上运行 GitHub Enterprise 服务，在节点之间实现请求的负载平衡。
- 
  term: 代码频率图
  description: >-
    一种显示仓库历史记录中每周的内容添加和删除的仓库图。
- 
  term: 行为准则
  description: 为如何参与社区制定标准的文档。
- 
  term: 代码所有者
  description: >-
    被指定为部分仓库代码所有者的个人。当有人打开对代码所有者拥有的代码进行更改的拉取请求（非草稿模式）时，会自动申请代码所有者审查。
- 
  term: 协作者
  description: >-
    协作者是受仓库所有者邀请参与，对仓库拥有读取和写入权限的人。
- 
  term: 提交
  description: >-
    提交或“修订”是对一个文件（或一组文件）的个别更改。在进行提交以保存工作时，Git 会创建唯一的 ID（也称为 "SHA" 或“哈希”），用于记录提交的特定更改以及提交者和提交时间。提交通常包含一条提交消息，其中简要说明所做的更改。
- 
  term: 提交作者
  description: 进行提交的用户。
- 
  term: 提交图
  description: >-
    显示过去一年对仓库的所有提交的仓库图。
- 
  term: 提交 ID
  description: 也称为 SHA。用于识别提交的 40 字符校验和哈希。
- 
  term: 提交消息
  description: >-
    随附于提交的简短描述性文字，用于沟通提交引入的更改。
- 
  term: 比较分支
  description: >-
    用于创建拉取请求的分支。此分支与您选择用于拉取请求的基础分支进行比较，并确定更改。合并拉取请求时，基础分支将使用比较分支的更改进行更新。也称为拉取请求的“头部分支”。
- 
  term: 持续集成
  description: >-
    也称为 CI。在个人对 GitHub 上配置的仓库提交更改后运行自动化构建和测试的过程。CI 是软件开发中一种帮助检测错误的常用最佳实践。
- 
  term: 贡献图
  description: >-
    用户个人资料中显示其参与记录（最长一年，按天显示）的部分。
- 
  term: 参与指南
  description: 说明人们应如何参与项目的文档。
- 
  term: 贡献
  description: >-
    GitHub 上的特定活动，将会：- 添加方块到用户的贡献图："[计为贡献的活动](/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)" - 添加活动到用户个人资料上的时间表："[贡献活动](/articles/viewing-contributions-on-your-profile/#contribution-activity)"
- 
  term: 贡献者
  description: >-
    贡献者是指对仓库没有协作者权限但参与过项目，并且他们打开的拉取请求已合并到仓库的人员。
- 
  term: 贡献者图
  description: 显示仓库前 100 个参与者的仓库图。
- 
  term: 优惠券
  description: >-
    一种由 GitHub 提供的代码，用户或组织可用以支付其所有或部分订阅。
- 
  term: 计划任务
  description: Unix 类计算机操作系统中一种基于时间的作业调度程序。
- 
  term: cURL
  description: 用于命令行或脚本中来传输数据。
- 
  term: 仪表板
  description: >-
    个人仪表板是您在 GitHub 上活动的信息中心。通过个人仪表板，可跟踪您关注或参与的议题和拉取请求、导航到您的常用仓库和团队页面，以及了解您关注或参与的仓库中的最近活动。还可以发现新仓库，这些仓库根据您关注的用户和标注的仓库而推荐。如果只需查看特定组织的活动，请访问组织的仪表板。更多信息请参阅“[关于个人仪表板](/articles/about-your-personal-dashboard)”或“[关于组织仪表板](/articles/about-your-organization-dashboard)”。
- 
  term: 默认分支
  description: >-
    仓库中新拉取请求和代码提交的基本分支。每个仓库至少有一个分支，Git 会在您初始化仓库时创建该分支。第一个分支通常称为"main"，并且通常是默认分支。
- 
  term: 从属者图
  description: >-
    一种显示依赖于公共仓库的包、项目和仓库的仓库图。
- 
  term: 依赖关系图
  description: >-
    一种显示仓库所依赖的包和项目的仓库图。
- 
  term: 部署密钥
  description: >-
    部署密钥是存储在服务器上的 SSH 密钥，授予访问单一 GitHub 仓库。此密钥直接附加到仓库而不是个人用户帐户。
- 
  term: HEAD 游离
  description: >-
    如果您操作的是游离的 HEAD，Git 将会警告您，这意味着 Git 不指向某个分支，并且您的任何提交都不会出现在提交历史记录中。例如，在检出并非任何特定分支最新提交的任意提交时，您操作的是“游离的 HEAD”。
- 
  term: 诊断
  description: GitHub Enterprise 实例设置和环境的概述。
- 
  term: 差异
  description: >-
    差异是指两个提交之间的更改或保存的更改之间的区别，它将从视觉上描述文件自上次提交后添加或删除的内容。
- 
  term: 脏
  description: >-
    工作树如果包含尚未提交到当前分支的更改，将被视为“脏”。
- 
  term: 电子邮件通知
  description: 发送到用户电子邮件地址的通知。
- 
  term: 企业帐户
  description: 企业帐户允许您集中管理多个 {% data variables.product.prodname_dotcom_the_website %} 组织的策略和帐单。{% data reusables.gated-features.enterprise-accounts %}
- 
  term: Explorer
  description: >-
    GraphiQL 的实例，是“图形交互式浏览器内 GraphQL IDE”。
- 
  term: 快进
  description: >-
    快进是一种特殊类型的合并，在其中您有修订以及“合并”另一个分支的更改作为现有分支的子系。在这种情况下，您无法进行新的合并提交，而只是更新此修订。这在远程仓库的远程跟踪分支中经常发生。
- 
  term: 功能分支
  description: >-
    用于试验新功能或修复未正式使用的议题的分支。也称为主题分支。
- 
  term: 围栏代码块
  description: '您可以在代码块前后使用三个反引号 \`\`\`，通过 GitHub Flavored Markdown 创建缩进代码块。请参阅此 [example](/articles/creating-and-highlighting-code-blocks#fenced-code-blocks)。'
- 
  term: 获取
  description: >-
    在使用 `git fetch` 时，您将从远程仓库添加更改到本地工作分支，而不提交它们。与 `git pull` 不同，提取可让您在更改提交到本地分支之前先进行审查。
- 
  term: 跟进（用户）
  description: 获取关于另一个用户的贡献和活动的通知。
- 
  term: 强制推送
  description: >-
    一种使用本地更改覆盖远程仓库的 Git 推送，不管是否冲突。
- 
  term: 复刻
  description: >-
    分叉是其他用户仓库在您的帐户上的个人副本。分叉允许您自由更改项目而不影响原始上游仓库。您也可以在上游仓库中打开拉取请求，并使分叉同步最新的更改，因为两个仓库仍然互相连接。
- 
  term: 免费计划
  description: >-
    免费的用户帐户结算方案。用户可以通过无限的协作者协作处理无限的公共仓库。
- 
  term: Gist
  description: >-
    Gist 是一个您可以在 GitHub 上编辑、克隆和复刻的可共享文件。您可以将 Gist 设为{% if currentVersion == "github-ae@latest" %}内部{% else %}公共{% endif %}或机密，但机密 gist 可用于具有 URL 的{% if currentVersion == "github-ae@latest" %}任何企业成员{% else %}任何人{% endif %}。
- 
  term: Git
  description: >-
    Git 是一个开源项目，用于以文本文件跟踪更改。它由 Linux 操作系统的作者编写，是 GitHub、社交和用户界面赖以构建的核心技术。
- 
  term: GitHub 应用程序
  description: >-
    GitHub 应用程序向整个组织提供服务，在他们执行功能时使用自己的标识。它们可以直接安装在组织和用户帐户上，授予对特定仓库的访问。它们随附细致的权限和内置的 web 挂钩。
- 
  term: GitHub Flavored Markdown
  description: GitHub 特定的 Markdown，用于格式化 GitHub 中的文字和代码。请参阅 [GitHub Flavored Markdown 规范](https://github.github.com/gfm/) 或 [在 GitHub 上编写和设置格式入门](/articles/getting-started-with-writing-and-formatting-on-github)。
- 
  term: GitHub 导入工具
  description: >-
    一种可让用户快速将源代码仓库（包括提交和修订记录）导入 GitHub 的工具。
- 
  term: GitHub Jobs
  description: >-
    一个 GitHub 网站，雇主可在其中发布 GitHub 用户可能感兴趣的职位。
- 
  term: GitHub Marketplace
  description: >-
    GitHub 用户和组织用于购买和安装应用程序以扩展和补充其工作流程的子站点。
- 
  term: GitHub Pages
  description: >-
    也称为“页面”。设计为托管直接来自 GitHub 仓库的个人、组织或项目页面的静态站点托管服务。
- 
  term: GitHub Wiki
  description: GitHub 仓库上托管 wiki 样式文档的部分。
- 
  term: gitfile
  description: >-
    一种普通的 `.git` 文件，始终位于工作树的根部，指向 Git 目录，包含整个 Git 仓库及其元数据。您可以在命令行上使用 `git rev-parse --git-dir` 查看仓库（实际仓库）的此文件。
- 
  term: GraphQL
  description: >-
    一种用于 API 的查询语言，以及对现有数据执行这些查询的运行时。
- 
  term: HEAD
  description: 定义的分支提交，通常是分支顶端的最新提交。
- 
  term: 头部分支
  description: 其更改在合并拉取请求时合并到基础分支的分支，也称为“比较分支”。
- 
  term: 'Hello, World'
  description: >-
    "Hello, World!" 程序是一个向用户输出或显示 "Hello, World!" 的计算机程序。因为此程序通常很简单，所以常用作编程语言的基本语法示例，在学习新的编程语言时经常作为第一个练习。
- 
  term: 高可用性
  description: >-
    持续运行所需时长的系统或组件。
- 
  term: 挂钩
  description: >-
    在多个 Git 命令正常执行时，对可选脚本进行标注以允许开发者添加功能或检查。通常，挂钩允许预先验证和潜在中止命令，并且允许在操作完成后再发事后通知。
- 
  term: 主机名
  description: >-
    人类可读的昵称，与连接到网络的设备地址对应。
- 
  term: 默认肖像
  description: >-
    自动生成的图像，当用户注册 GitHub 时用作默认头像。用户可以用自己的照片更换其识别头像。
- 
  term: 身份提供程序
  description: >-
    也称为 IdP，是一种可信的提供程序，可让您使用 SAML 单点登录 (SSO) 访问其他网站。
- 
  term: 实例
  description: >-
    组织包含在其配置和控制的虚拟机中的 GitHub 私有副本。
- 
  term: 集成
  description: >-
    一种与 GitHub 集成的第三方应用程序，可以是 GitHub 应用程序、OAuth 应用程序或 web 挂钩。
- 
  term: 议题
  description: >-
    议题是提议的与仓库相关的改进、任务或问题。（对于公共仓库）任何人都可创建议题，然后由仓库协作者调解。每个议题都包含自己的讨论线程。您也可以使用标签将议题归类并分配到某人。
- 
  term: Jekyll
  description: 个人、项目或组织站点的静态站点生成器。
- 
  term: Jekyll 主题选择器
  description: >-
    一种为 Jekyll 站点选择可视主题的自动化方式，无需编辑或复制 CSS 文件。
- 
  term: 密钥指纹
  description: 用于识别较长公钥的简短字节系列。
- 
  term: 密钥链
  description: macOS 中的一种密码管理系统。
- 
  term: 关键词
  description: 用在拉取请求中时关闭议题的特定文字。
- 
  term: 标签
  description: >-
    议题或拉取请求的标记。仓库随附一系列默认标签，但用户也可创建自定义标签。
- 
  term: LFS
  description: >-
    Git Large File Storage。一种开源 Git 扩展，用于对大文件进行版本控制。
- 
  term: 许可
  description: >-
    一种可随附于项目的文档，告知们能够对您的源代码执行哪些操作，不能执行哪些操作。
- 
  term: Linguist
  description: >-
    GitHub 上使用的一个存储库，用于检测 blob l语言，忽略二进制或专用文件，抑制差异中生成的文件，以及生成语言细分图。
- 
  term: 行注释
  description: 拉取请求内特定代码行上的评论。
- 
  term: 行结束符
  description: >-
    用符号表示文本文件中一行结束的不可见字符。
- 
  term: 已锁定个人帐户
  description: >-
    用户无法访问的个人帐户。当用户将其付费帐户降级到免费帐户或者其付费计划过期时，帐户将被锁定。
- 
  term: 管理控制台
  description: >-
    GitHub Enterprise 界面中包含管理功能的部分。
- 
  term: Markdown
  description: >-
    Markdown 是一种非常简单的语义文件格式，与 .doc、.rtf 和 .txt 等格式不太相似。通过 Markdown，没有 web 发布背景知识的人也能编写文字（包含链接、列表、项目符号等）并将其像网站一样展示。GitHub 支持 Markdown，并使用特定形式的 Markdown，称为 GitHub Flavored Markdown。请参阅 [GitHub Flavored Markdown 规范](https://github.github.com/gfm/) 或 [在 GitHub 上编写和设置格式入门](/articles/getting-started-with-writing-and-formatting-on-github)。
- 
  term: 标记
  description: 一种用于标注和格式化文档的系统。
- 
  term: main
  description: >-
    默认开发分支。只要创建 Git 仓库，就会创建一个名为 "main" 的分支，并且它会变为活动的分支。大多数情况下，这包含本地开发，但纯属惯例，而非必需。
- 
  term: master
  description: >-
    许多 Git 存储库中的默认分支。默认情况下，在命令行上创建新的 Git 仓库时，将创建一个名为 "master" 的分支。许多工具现在对默认分支使用替代名称。例如，在 GitHub 上创建新仓库时，默认分支称为 "main"。
- 
  term: 成员图
  description: 显示仓库所有分叉的仓库图。
- 
  term: 提及
  description: >-
    一种通过在用户名前加上 @ 符号来发送给用户的通知。GitHub 上组织中的用户也可成为可提及的团队一部分。
- 
  term: 合并
  description: >-
    合并是从一个分支（在相同的仓库中或来自一个分叉）提取更改，然后将其应用到另一个分支。这通常是作为“拉取请求”（可视为请求合并）或通过命令行完成。如果没有冲突的更改，可通过 GitHub.com web 界面使用拉取请求完成合并，或始终通过命令行完成。
- 
  term: 合并冲突
  description: >-
    合并的分支之间发生的差异。当人们对同一文件的同一行进行不同的更改时，或者一个人编辑某文件而另一个人删除该文件时，就会发生合并冲突。必须解决合并冲突后才可合并分支。
- 
  term: 里程碑
  description: >-
    一种跟踪仓库中议题或拉取请求组进度的方式。
- 
  term: 镜像
  description: 仓库的新副本。
- 
  term: 嵌套团队
  description: >-
    父团队的子团队。您可有多个子（或嵌套的）团队。
- 
  term: 网络图
  description: >-
    显示整个仓库网络的分支历史记录的仓库图，其中包括根仓库的分支以及包含网络独有提交的分叉的分支。
- 
  term: 消息馈送
  description: >-
    您关注的仓库或人员的活动视图。组织的消息馈送显示组织拥有的仓库上的活动。
- 
  term: 非快进
  description: >-
    当仓库的本地副本未与上游仓库同步时，您在推送本地更改之前需要提取上游更改。
- 
  term: 通知
  description: >-
    Web 或电子邮件（根据您的设置）传送的更新，提供您感兴趣的活动的相关信息。
- 
  term: OAuth 应用程序
  description: >-
    使用访问令牌而非密码来访问用户信息的第三方应用程序。
- 
  term: OAuth 令牌
  description: OAuth 应用程序中用来访问用户信息的访问令牌。
- 
  term: 外部协作者
  description: >-
    已被授予访问一个或多个组织的仓库但对组织没有其他访问权限的用户，且不属于组织的成员。
- 
  term: 开源
  description: >-
    开源软件是可供任何人自由使用、修改和共享（以修改和未修改的形式）的软件。今天，“开源”的概念通常扩展到软件以外，代表一种协作原则，其中工作材料在线供任何人分叉、修改、讨论和参与。
- 
  term: 组织
  description: >-
    组织是两个或以上用户组成的小组，通常与实际组织对应。它们由用户管理，可以包含仓库和团队。
- 
  term: 组织所有者
  description: 对其拥有的组织具有完全管理权限的用户。
- 
  term: 源
  description: >-
    默认上游仓库。大多数项目至少有一个它们跟踪的上游项目。默认情况下，源用于该目的。
- 
  term: 所有者
  description: >-
    对组织有完全管理权限的组织成员。
- 
  term: 父团队
  description: >-
    在嵌套团队内，向子团队传承其访问权限和 @提及的主要团队。
- 
  term: 参与通知
  description: >-
    关于您的用户名或团队被提及或者您之前回复过评论的议题或拉取请求中对话更新的通知。
- 
  term: 永久链接
  description: 到特定网页的永久静态超链接。
- 
  term: 个人帐户
  description: >-
    属于个别用户的 GitHub 帐户。
- 
  term: 主电子邮件地址
  description: >-
    GitHub 用于发送收据、信用卡或 PayPal 费用及其他帐单相关通信的主要电子邮件地址。
- 
  term: 固定仓库
  description: >-
    用户已决定在其个人资料中突出显示的仓库。
- 
  term: 预接收挂钩
  description: >-
    在可用于实施质量检查的 GitHub Enterprise 服务器上运行的脚本。
- 
  term: 私有贡献
  description: 对私有（与公共相对）仓库的贡献。
- 
  term: 私有仓库
  description: >-
    私有仓库仅对仓库所有者和所有者指定的协作者可见。
- 
  term: 生产分支
  description: >-
    包含可使用或部署到应用程序或站点的最终更改的分支。
- 
  term: 个人资料
  description: 显示 GitHub 上用户活动相关信息的页面。
- 
  term: 个人资料照片
  description: >-
    用户上传到 GitHub 的自定义图像，用于标识其活动，通常与其用户名结合使用。也称为头像。
- 
  term: 项目板
  description: >-
    GitHub 内由议题、拉取请求和注释组成的板，按列分类为卡。
- 
  term: 受保护分支
  description: >-
    受保护分支在仓库管理员选择保护的分支上禁止多项 Git 功能。必要检查未通过或必需审查未批准，不能对它们执行强制推送、删除和更改合并，或者不能从 GitHub web 界面上传文件到其中。受保护分支通常是默认分支。
- 
  term: 公共贡献
  description: 对公共（与私有相对）仓库的贡献。
- 
  term: 公共仓库
  description: >-
    公共仓库可供任何人查看，包括不是 GitHub 用户的人员。
- 
  term: 拉取
  description: >-
    拉取是指提取与合并更改。例如，如果有人编辑了您操作的远程文件，您要将这些更改拉取到本地副本，以使其保持最新。另请参阅“提取”。
- 
  term: 拉取权限
  description: 读取权限的同义词。
- 
  term: 拉取请求
  description: >-
    拉取请求是提议更改用户提交的仓库，然后被仓库协作者接受或拒绝。像议题一样，每个拉取请求都有自己的论坛。
- 
  term: 拉取请求审查
  description: >-
    拉取请求中协作者批准更改或在拉取请求合并之前申请进一步更改的评论。
- 
  term: 脉冲图
  description: 提供仓库活动概要的仓库图。
- 
  term: 打卡图
  description: >-
    根据周日期和时间显示仓库更新频率的仓库图
- 
  term: 推送
  description: >-
    推送是指将提交的更改发送到 GitHub.com 上的远程仓库。例如，如果您在本地更改内容，便可推送这些更改，让其他人访问。
- 
  term: 推送分支
  description: >-
    成功将分支推送到远程仓库后，可以通过更改本地分支更新远程分支。“推送分支”时，Git 将在远程仓库中搜索分支的 HEAD ref，并验证它是否是分支本地 HEAD ref 的直接始源。验证后，Git 会将所有对象（从本地 HEAD ref 可达，从远程仓库丢失）拉取到远程对象数据库，然后更新远程 HEAD ref。如果远程 HEAD 不是本地 HEAD 的始源，则推送失败。
- 
  term: 推送权限
  description: 写入权限的同义词。
- 
  term: 读取权限
  description: >-
    对仓库的权限级别，允许用户拉取或者读取仓库中的信息。所有公共仓库向所有 GitHub 用户授予读取权限。拉取权限的同义词。
- 
  term: 自述文件
  description: 包含仓库中文件相关信息的文本文件，通常是仓库访问者看到的第一个文件。自述文件连同仓库许可证、参与指南以及行为准则，帮助您交流要求和管理项目的参与。
- 
  term: 变基
  description: >-
    要将一系列变更从一个分支重新应用到不同的基分支，并将分支的 HEAD 重置为结果。
- 
  term: 异地恢复帐户
  description: >-
    允许用户在无法使用双重身份验证方法或恢复代码时向其 GitHub 帐户添加额外一重安全保护。用户可以通过 Facebook 以帐户恢复令牌的形式存储其 GitHub 帐户的身份验证凭据，将其 GitHub 帐户与其 Facebook 帐户相关联。
- 
  term: 恢复代码
  description: 帮助您重新获取对 GitHub 帐户的访问权限的代码。
- 
  term: 发行版
  description: GitHub 封装软件并向用户提供软件的方式。
- 
  term: 远程
  description: >-
    这是托管于服务器（很可能是 GitHub.com）上的仓库或分支版本。远程版本可以连接到本地克隆，以使更改保持同步。
- 
  term: 远程仓库
  description: >-
    用于跟踪同一个项目但储存在其他位置的仓库。
- 
  term: 远程 URL
  description: >-
    存储代码的位置：GitHub、其他用户分支甚至不同服务器 上的仓库。
- 
  term: 副本
  description: >-
    为主要 GitHub Enterprise 实例提供冗余的 GitHub Enterprise 实例。
- 
  term: 仓库
  description: >-
    仓库是 GitHub 最基本的元素，最容易被想象成项目的文件夹。一个仓库包含所有项目文件（包括文档），并且存储每个文件的修订历史记录。仓库可有多个协作者，也可以是公共仓库或私有仓库。
- 
  term: 仓库图
  description: 仓库数据的可视表现形式。
- 
  term: 仓库维护员
  description: >-
    管理仓库的人员。此人可帮助对议题分类，以及使用标签和其他功能管理仓库的工作，也可负责更新自述文件和参与文件。
- 
  term: 必需拉取请求审查
  description: >-
    必需审查确保拉取请求至少获得一次审批审查之后，协作者才可更改受保护分支。
- 
  term: 必需状态检查
  description: >-
    拉取请求检查，确保在协作者可以对受保护分支进行更改前，所有必需的 CI 测试都已通过。
- 
  term: 解决
  description: 手动修复自动合并失败的操作。
- 
  term: 还原
  description: >-
    恢复 GitHub 上的拉取请求时，新拉取请求会自动打开，其中有一个提交用于从原始合并的拉取请求恢复合并提交。在 Git 中，您可以使用 `git revert` 恢复提交。
- 
  term: 审查
  description: >-
    审查允许对仓库具有访问权限的其他人评论拉取请求中提议的更改、审批更改或在拉取请求合并之前请求进一步更改。
- 
  term: 根目录
  description: 层次结构中的第一个目录。
- 
  term: 根文件系统
  description: 基本操作系统和 GitHub Enterprise 应用环境。
- 
  term: 已保存回复
  description: >-
    您可以保存并添加到 GitHub 用户帐户的评论，然后可在 GitHub 的议题和拉取请求中使用。
- 
  term: 作用域
  description: >-
    OAuth 应用程序可以申请访问公共及非公共数据的命名权限组。
- 
  term: 席位
  description: >-
    GitHub Enterprise 组织中的用户，可称为“座位数”。
- 
  term: 机密团队
  description: >-
    只有团队其他人以及具有所有者权限的人员可见的团队。
- 
  term: 安全日志
  description: >-
    列出最近 50 次操作或过去 90 天内执行的操作的日志。
- 
  term: 服务挂钩
  description: >-
    也称为“Web 挂钩”。Web 挂钩是一种通知方式，只要仓库或组织上发生特定操作，就会发送通知到外部 web 服务器。
- 
  term: 单点登录
  description: >-
    也称为 SSO。允许用户登录到一个位置 - 身份提供程序 (IdP) - 然后授予用户访问其他服务提供程序。
- 
  term: 快照
  description: 虚拟机在某一时间点的检查点。
- 
  term: 压缩
  description: 将多个提交合并为一个。也是 Git 命令。
- 
  term: SSH 密钥
  description: >-
    SSH 密钥是一种使用加密消息向在线服务器标识自己的方法。就好像您的计算机使用唯一密码登录其他服务一样。{% data variables.product.product_name %} 使用 SSH 密钥将信息安全地传输到您的计算机。
- 
  term: 暂存实例
  description: >-
    在修改应用到实际 GitHub Enterprise 实例之前测试修改的一种方式。
- 
  term: 状态
  description: >-
    拉取请求中的可视表现形式，表示您的提交符合您参与的仓库所设定的条件。
- 
  term: 状态检查
  description: >-
    状态检查是外部进程，例如持续集成构建，它们针对您在仓库中的每个提交而运行。更多信息请参阅“[关于状态检查](/articles/about-status-checks)”。
- 
  term: 星标
  description: >-
    仓库的书签或赞赏表示。星标是项目受欢迎程度排名的手动方式。
- 
  term: 订阅
  description: 用户或组织的 GitHub 计划。
- 
  term: 团队
  description: >-
    通过级联访问权限和提及来反映公司或群组结构的组织成员组。
- 
  term: 团队维护员
  description: >-
    具有组织所有者一部分团队管理权限的组织成员。
- 
  term: 团队计划
  description: >-
    为您提供无限公共和私有仓库的组织结算方案。
- 
  term: 时间表
  description: 拉取请求或用户个人资料中的一系列事件。
- 
  term: 主题分支
  description: >-
    开发者用来识别开发概念行的常规 Git 分支。由于分支很容易并且便宜，因此往往适合拥有多个小分支，每个小分支包含定义明确的概念，或者渐进但相关的更改。也可称为“特征分支”。
- 
  term: 主题
  description: >-
    探索特定主题领域的仓库、查找要参与的项目以及发现特定问题的新解决方案的一种方式。
- 
  term: 通信图，流量图
  description: >-
    显示仓库流量的仓库图，包括完整克隆（不是提取）、过去 14 天的访问者、推荐站点及热门内容。
- 
  term: 转让
  description: >-
    转让仓库是指更改仓库的所有者。新所有者能够立即管理仓库的内容、议题、拉取请求、发行版和设置。
- 
  term: 上游
  description: >-
    在谈论分支或分叉时，原始仓库的主要分支通常被称为“上游”，因为它是其他更改的主要来源。您操作的分支/分叉则称为“下游”。也称为“源”。
- 
  term: 上游分支
  description: >-
    合并到所述分支的默认分支（或所述分支变基到的分支）。它通过 `branch.<name>.remote` 和 `branch.<name>.merge` 配置。如果 A 的上游分支是源/B，有时我们会说“A 在跟踪源/B”。
- 
  term: 用户
  description: >-
    用户是具有个人 GitHub 帐户的人员。每个用户都有个人资料，可以拥有多个仓库（公共或私有）。他们可以创建或受邀加入组织或者协作处理其他用户的仓库。
- 
  term: 用户名
  description: 用户在 GitHub 上的句柄。
- 
  term: 可见团队
  description: 可被每个组织成员查看和 @提及的团队。
- 
  term: 查看
  description: >-
    您可以关注仓库或议题，以便在议题或拉取请求有更新时接收通知。
- 
  term: 查看通知
  description: 关于用户订阅的仓库中活动的通知。
- 
  term: web 通知
  description: >-
    显示在 GitHub 的 web 界面中的通知：https://github.com/notifications
- 
  term: web 挂钩
  description: >-
    Web 挂钩可让您构建或设置订阅 GitHub.com 上特定事件的 GitHub 应用程序。Web 挂钩提供一种通知方式，只要仓库或组织中发生特定操作，就会发送通知到外部 web 服务器。也称为“服务挂钩”。
- 
  term: 与 GitHub 结合使用
  description: 支持 GitHub 的集成列表。
- 
  term: 写入权限
  description: >-
    对仓库的权限级别，可让用户推送或写入更改到仓库。
