---
- 
  term: '@erwähnen'
  description: um eine Person auf GitHub mittels „@“ vor ihrem Benutzernamen zu benachrichtigen. Benutzer in einer Organisation auf GitHub können auch Bestandteil eines Teams sein, das erwähnt werden kann.
- 
  term: Zugriffstoken
  description: >-
    Ein Token, das anstelle eines Passworts verwendet wird, wenn Git-Vorgänge über HTTPS mit Git an der Befehlszeile oder über die API ausgeführt werden. Dies wird auch als persönliches Zugriffstoken bezeichnet.
- 
  term: Kontowiederherstellungstoken
  description: >-
    Die als Teil einer Kontowiederherstellungseinrichtung gespeicherten Authentifizierungsanmeldeinformationen, die als „Recover Accounts Elsewhere“ bezeichnet werden, mit denen Sie diese Backup-Anmeldeinformationen speichern können.
- 
  term: API-Vorschau
  description: >-
    Eine Möglichkeit, die neuen APIs und die Änderungen an den vorhandenen API-Methoden zu testen, bevor sie ein Bestandteil der offiziellen GitHub-API werden.
- 
  term: Appliance
  description: >-
    Eine mit Just Enough Operating System (JeOS) kombinierte Softwareanwendung für die optimale Ausführung auf branchenüblicher Hardware (in der Regel ein Server) oder auf einer virtuellen Maschine.
- 
  term: Bearbeiter
  description: Der Benutzer, der einem Issue zugewiesen ist.
- 
  term: Authentifizierungscode
  description: >-
    A code you'll supply, in addition to your GitHub password, when signing in with 2FA via the browser. This code is either generated by an application or delivered to your phone via text message. Also called a "2FA authentication code."
- 
  term: Basis-Branch
  description: Der Branch, in den Änderungen kombiniert werden, wenn Du einen Pull Request zusammenführst. Wenn Du einen Pull Request erstellst, kannst Du falls erforderlich den Basis-Branch vom Standardbranch des Repositorys auf einen anderen Branch ändern.
- 
  term: einfache Authentifizierung
  description: >-
    A method of authentication where the credentials are sent as unencrypted text.
- 
  term: Bio
  description: >-
    The user-generated description found on a profile: [Adding a bio to your profile](/articles/adding-a-bio-to-your-profile)
- 
  term: Abrechnungszeitraum
  description: Das Zeitintervall für Ihren spezifischen Abrechnungsplan.
- 
  term: E-Mail-Adresse für die Abrechnung
  description: >-
    Die E-Mail-Adresse der Organisation, an die GitHub Quittungen, Kreditkarten- oder PayPal-Abrechnungen und andere abrechnungsbezogene Kommunikationen sendet.
- 
  term: Abrechnungsmanager
  description: Das Organisationsmitglied, das die Abrechnungseinstellungen für eine Organisation verwaltet.
- 
  term: Abrechnungsplan
  description: >-
    Zahlungspläne für Benutzer und Organisationen, die festgelegte Features für jede Art von Plan enthalten.
- 
  term: Blame
  description: >-
    Das Feature „Blame“ in Git beschreibt die letzte Änderung an jeder Zeile einer Datei, die im Allgemeinen die Revision, den Autor und die Uhrzeit anzeigt. Dies ist beispielsweise hilfreich, um zu ermitteln, wann ein Feature hinzugefügt wurde oder welcher Commit zu einem bestimmten Bug geführt hat.
- 
  term: Sperre
  description: >-
    Zum Entfernen der Fähigkeit eines Benutzers, an den Repositorys einer Organisation mitzuarbeiten.
- 
  term: Branch
  description: >-
    A branch is a parallel version of a repository. It is contained within the repository, but does not affect the primary or main branch allowing you to work freely without disrupting the "live" version. When you've made the changes you want to make, you can merge your branch back into the main branch to publish your changes.
- 
  term: Branch-Einschränkung
  description: >-
    Eine Einschränkung, die von Repository-Administratoren aktiviert werden kann, sodass nur bestimmte Benutzer oder Teams Änderungen per Push-Vorgang an den Branch übertragen oder daran vornehmen können.
- 
  term: Business-Plan
  description: >-
    Ein Organisationsabrechnungsplan, mit dem Sie an unbegrenzten öffentlichen und privaten Repositorys zusammenarbeiten können, Organisationsmitgliedern erlauben oder vorschreiben können, sich mittels SAML SSO bei GitHub zu authentifizieren, und mit dem Sie den Zugriff mittels SAML oder SCIM bereitstellen oder die entsprechende Bereitstellung aufheben können.
- 
  term: CA-Zertifikat
  description: >-
    Ein von der Zertifizierungsstelle (CA) ausgestelltes digitales Zertifikat, mit dem sichergestellt wird, dass zwischen zwei Maschinen, beispielsweise dem Computer eines Benutzers und GitHub.com, eine gültige Verbindung besteht und die Inhaberschaft einer Website verifiziert wird.
- 
  term: Ticket
  description: Ein bewegliches Quadrat innerhalb eines Projektboards, das einem Issue oder einem Pull Request zugeordnet ist.
- 
  term: Check
  description: >-
    Ein Check ist eine Art Statusprüfung auf {% data variables.product.product_name %}. Siehe „[Status checks](#status-Checks)."
- 
  term: Auschecken
  description: >-
    Wenn Sie „git checkout“ an der Befehlszeile verwenden, können Sie einen neuen Branch erstellen, Ihren aktuellen Arbeits-Branch in einen anderen Branch ändern oder sogar über einen anderen Branch zu einer anderen Version einer Datei wechseln, indem Sie „git checkout [Branch-Name] [Pfad zur Datei]“ verwenden. Die Aktion „checkout“ aktualisiert die gesamte oder einen Teil der Arbeitsstruktur mit einem Strukturobjekt oder Blob aus der Objektdatenbank und aktualisiert den Index und HEAD, wenn die gesamte Arbeitsstruktur auf einen neuen Branch verweist.
- 
  term: Cherry-Picking
  description: >-
    To choose a subset of changes from a series of changes (typically commits) and record them as a new series of changes on top of a different codebase. In Git, this is performed by the `git cherry-pick` command to extract the change introduced by an existing commit on another branch and to record it based on the tip of the current branch as a new commit. For more information, see [git-cherry-pick](https://git-scm.com/docs/git-cherry-pick) in the Git documentation.
- 
  term: untergeordnetes Team
  description: >-
    Innerhalb von untergeordneten Teams dasjenige, das die Zugriffsberechtigungen und @Erwähnungen des übergeordneten Teams übernimmt.
- 
  term: sauber
  description: >-
    Eine Arbeitsstruktur ist sauber, wenn sie der Revision entspricht, auf die der aktuelle HEAD verweist. Siehe auch „verunreinigt“.
- 
  term: Klon
  description: >-
    Ein Klon ist eine Kopie eines Repositorys, das sich auf Ihrem Computer befindet und nicht irgendwo auf dem Server einer Website, oder der Kopiervorgang. Wenn Sie einen Klon erstellen, können Sie die Dateien in Ihrem bevorzugten Editor bearbeiten und Git verwenden, um Ihre Änderungen zu verfolgen, ohne online sein zu müssen. Das von Ihnen geklonte Repository ist weiterhin mit der Remote-Version verbunden, sodass Sie Ihre lokalen Änderungen an die Remote-Instanz per Push-Vorgang übertragen können, damit sie synchron bleiben, wenn Sie online sind.
- 
  term: Clustering
  description: >-
    Die Fähigkeit, GitHub Enterprise-Dienste knotenübergreifend auszuführen und einen Lastenausgleich zwischen ihnen herzustellen.
- 
  term: Code-Verlaufsdiagramm
  description: >-
    Ein Repository-Diagramm, das die Inhaltsergänzungen und -löschungen für jede Woche im Verlauf eines Repositorys darstellt.
- 
  term: Verhaltenskodex
  description: Ein Dokument, in dem die Standards für die Interaktion in einer Community definiert sind.
- 
  term: Codeinhaber
  description: >-
    Eine Person, die als Inhaber eines Teils des Codes eines Repositorys festgelegt ist. Der Codeinhaber wird automatisch zur Überprüfung angefordert, wenn ein Pull Request (nicht im Entwurfsmodus) geöffnet wird, der Änderungen an Code vornimmt, der dem Codeinhaber gehört.
- 
  term: Mitarbeiter
  description: >-
    Ein Mitarbeiter ist eine Person mit Lese- und Schreibzugriff auf ein Repository, der vom Repository-Inhaber zur Teilnahme eingeladen wurde.
- 
  term: Commit
  description: >-
    A commit, or "revision", is an individual change to a file (or set of files). When you make a commit to save your work, Git creates a unique ID (a.k.a. the "SHA" or "hash") that allows you to keep record of the specific changes committed along with who made them and when. Commits usually contain a commit message which is a brief description of what changes were made.
- 
  term: Commit-Autor
  description: Der Benutzer, der den Commit durchführt.
- 
  term: Commit-Diagramm
  description: >-
    Ein Repository-Diagramm, in dem alle an einem Repository im vergangenen Jahr durchgeführten Commits angezeigt werden.
- 
  term: Commit-ID
  description: Wird auch als SHA bezeichnet. Hierbei handelt es sich um einen Prüfsummen-Hash, der den Commit identifiziert.
- 
  term: Commit-Mitteilung
  description: >-
    Short, descriptive text that accompanies a commit and communicates the change the commit is introducing.
- 
  term: Branch vergleichen
  description: >-
    Der Branch, den Du benutzt, um einen Pull Request zu erstellen. Dieser Branch wird mit dem Basis-Branch verglichen, den Du für den Pull Request wählst, und die Änderungen werden identifiziert. Wenn der Pull Request zusammengeführt wird, wird der Basis-Branch mit den Änderungen aus dem Vergleichs-Branch aktualisiert. Auch bekannt als der „Head-Branch" des Pull Requests.
- 
  term: fortlaufende Integration
  description: >-
    Wird auch als CI bezeichnet. Ein Prozess, der automatisierte Builds und Tests ausführt, wenn eine Person eine Änderung an einem konfigurierten Repository auf GitHub durchführt. CI ist eine allgemeine Best Practice in der Softwareentwicklung, die dabei hilft, Fehler zu ermitteln.
- 
  term: Beteiligungsdiagramm
  description: >-
    Der Teil des Profils eines Benutzers, in dem seine Beiträge Tag für Tag über einen Zeitraum von bis zu einem Jahr gezeigt werden.
- 
  term: Beitragsrichtlinien
  description: Ein Dokument, in dem erläutert wird, wie zu Ihrem Projekt beigetragen werden soll.
- 
  term: Beiträge
  description: >-
    Specific activities on GitHub that will: - Add a square to a user's contribution graph: "[What counts as a contribution](/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)" - Add activities to a user's timeline on their profile: "[Contribution activity](/articles/viewing-contributions-on-your-profile/#contribution-activity)"
- 
  term: Mitwirkende
  description: >-
    Ein Mitarbeiter besitzt keinen Mitarbeiterzugriff auf ein Repository, hat sich jedoch an einem Projekt beteiligt und besaß einen in das Repository gemergten Pull Request, den er geöffnet hatte.
- 
  term: Mitarbeiterdiagramm
  description: Ein Repository-Diagramm, in dem die Top-100-Mitarbeiter an einem Repository angezeigt werden.
- 
  term: Gutschein
  description: >-
    Ein von GitHub bereitgestellter Code, der von Benutzern oder Organisationen verwendet werden kann, um ihr gesamtes Abonnement oder einen Teil davon zu bezahlen.
- 
  term: Cron
  description: Ein zeitbasierter Auftragsplaner in Unix-ähnlichen Computerbetriebssystemen.
- 
  term: cURL
  description: Wird in Befehlszeilen oder Skripts zum Übertragen von Daten verwendet.
- 
  term: Dashboard
  description: >-
    Dein persönliches Dashboard ist der Hauptknotenpunkt Deiner Aktivitäten auf GitHub. Über Dein persönliches Dashboard verfolgst Du Probleme und Pull-Requests, die Du verfolgst oder an denen Du arbeitest, navigierst zu Deinen Top-Repositorys und Teamseiten und informierst Dich über die neuesten Aktivitäten in Repositorys, die Du beobachtest oder an denen Du teilnimmst. Du kannst auch neue Repositorys entdecken, welche Dir empfohlen werden basierend auf Benutzern, denen Du folgst und Repositorys, die Du als Favorit markiert hast. Um nur Aktivitäten für eine bestimmte Organisation anzuzeigen, besuchst Du das Dashboard Deiner Organisation. Weitere Informationen findest Du unter „[Über Dein persönliches Dashboard](/articles/about-your-personal-dashboard)" oder „[Über Dein Organisations-Dashboard](/articles/about-your-organization-dashboard)."Pull Request
- 
  term: Standardbranch
  description: >-
    The base branch for new pull requests and code commits in a repository. Each repository has at least one branch, which Git creates when you initialize the repository. The first branch is usually called `main`, and is often the default branch.
- 
  term: Abhängigkeitsdiagramm
  description: >-
    Ein Repository-Diagramm, in dem die Pakete, Projekte und Repositorys gezeigt werden, die von einem öffentlichen Repository abhängen.
- 
  term: Abhängigkeitsdiagramm
  description: >-
    Ein Repository-Diagramm, in dem die Pakete und Projekte angezeigt werden, von denen das Repository abhängig ist.
- 
  term: Deployment-Schlüssel
  description: >-
    Ein Deployment-Schlüssel ist ein SSH-Schlüssel, der auf Ihrem Server gespeichert ist und Zugriff auf ein einzelnes GitHub-Repository gewährt. Dieser Schlüssel wird direkt an das Repository angehängt und nicht an ein persönliches Benutzerkonto.
- 
  term: loser HEAD
  description: >-
    Git warnt Sie, wenn Sie an einem losen HEAD arbeiten. Dies bedeutet, dass Git nicht auf einen Branch verweist und die von Ihnen vorgenommenen Commits im Commit-Verlauf nicht angezeigt werden. Wenn Sie beispielsweise einen zufälligen Commit auschecken, der nicht der neueste Commit eines bestimmten Branches ist, arbeiten Sie an einem „losen HEAD“.
- 
  term: Diagnose
  description: Eine Übersicht zu den Einstellungen und zur Umgebung einer GitHub Enterprise-Instanz.
- 
  term: Diff
  description: >-
    Ein Diff-Wert ist die Änderungsdifferenz zwischen zwei Commits oder gespeicherten Änderungen. Der Diff-Wert beschreibt visuell, was seit dem letzten Commit über eine Datei hinzugefügt oder entfernt wurde.
- 
  term: verunreinigt
  description: >-
    Eine Arbeitsstruktur wird als „verunreinigt“ angesehen, wenn sie Änderungen aufweist, die nicht an den aktuellen Branch gesendet wurden.
- 
  term: E-Mail-Benachrichtigungen
  description: An die E-Mail-Adresse eines Benutzers gesendete Benachrichtigungen.
- 
  term: Enterprise-Konto
  description: Enterprise-Konten erlauben Dir die zentrale Verwaltung von Richtlinien und Abrechnungen für mehrere {% data variables.product.prodname_dotcom_the_website %} Organisationen. {% data reusables.gated-features.enterprise-accounts %}
- 
  term: Explorer
  description: >-
    Eine GraphiQL-Instanz, bei der es sich um eine „grafische interaktive browserinterne GraphQL-IDE“ handelt.
- 
  term: Fast-Forward
  description: >-
    Ein Fast-Forward ist ein spezieller Merge-Typ, wo Sie über eine Revision verfügen und Sie die Änderungen eines anderen Branches „mergen“, die zufällig ein nachfolgendes Element von dem sind, was Sie haben. In einem solchen Fall nehmen Sie keinen neuen Merge-Commit vor, sondern aktualisieren einfach diese Revision. Dies erfolgt häufig auf einem Remote-Tracking-Branch eines Remote-Repositorys.
- 
  term: Feature-Branch
  description: >-
    Ein Branch, der verwendet wird, um mit einem neuen Feature zu experimentieren oder einen nicht in der Produktion befindlichen Issue zu korrigieren. Wird auch als Themen-Branch bezeichnet.
- 
  term: Fenced-Code-Block
  description: 'An indented block of code you can create with GitHub Flavored Markdown using triple backticks \`\`\` before and after the code block. See this [example](/articles/creating-and-highlighting-code-blocks#fenced-code-blocks).'
- 
  term: abrufen
  description: >-
    Wenn Sie „git fetch“ verwenden, fügen Sie die Änderungen aus dem Remote-Repository zu Ihrem lokalen Arbeits-Branch hinzu, ohne für sie einen Commit auszuführen. Im Gegensatz zu „git pull“ können Sie durch das Abrufen Änderungen überprüfen, bevor Sie sie an Ihren lokalen Branch senden.
- 
  term: folgen (Benutzern)
  description: Zum Abrufen von Benachrichtigungen zu den Beiträgen und zur Aktivität anderer Benutzer.
- 
  term: erzwungener Push
  description: >-
    Ein Git-Push, der das Remote-Repository ungeachtet von Konflikten durch die lokalen Änderungen überschreibt.
- 
  term: Fork
  description: >-
    Ein Fork ist eine persönliche Kopie des Repositorys eines anderen Benutzers, der sich in Ihrem Konto befindet. Mithilfe von Forks können Sie frei Änderungen an einem Projekt vornehmen, ohne das ursprüngliche vorgelagerte Repository zu beeinträchtigen. Darüber hinaus können Sie einen Pull Request im vorgelagerten Repository öffnen und Ihren Fork mit den neuesten Änderungen synchron halten, da beide Repositorys weiterhin verbunden sind.
- 
  term: Free-Plan
  description: >-
    Ein kostenloser Benutzerkonto-Abrechnungsplan. Benutzer können in unbegrenzten öffentlichen Repositorys mit unbegrenzt vielen Mitarbeitern interagieren.
- 
  term: Gist
  description: >-
    A gist is a shareable file that you can edit, clone, and fork on GitHub. You can make a gist {% if currentVersion == "github-ae@latest" %}internal{% else %}public{% endif %} or secret, although secret gists will be available to {% if currentVersion == "github-ae@latest" %}any enterprise member{% else %}anyone{% endif %} with the URL.
- 
  term: Git
  description: >-
    Git ist ein Open-Source-Programm für das Verfolgen von Änderungen in Textdateien. Es wurde vom Autor des Linux-Betriebssystems geschrieben und fungiert als die Kerntechnologie, auf der GitHub, die soziale und Benutzeroberfläche, basiert.
- 
  term: GitHub App
  description: >-
    GitHub Apps stellen einer gesamten Organisation einen Dienst bereit und verwenden ihre eigene Identität, wenn sie ihre Funktion ausführen. Sie können direkt auf Organisationen und Benutzerkoten installiert werden. Zudem kann ihn der Zugriff auf spezifische Repositorys gewährt werden. Sie enthalten granulare Berechtigungen und integrierte Webhooks.
- 
  term: GitHub Flavored Markdown
  description: GitHub-spezifisches Markdown, das zum GitHub-übergreifenden Formatieren von Fließtext und Code verwendet wird. Siehe [GitHub Flavored Markdown – Spezifikationen](https://github.github.com/gfm/) oder [Erste Schritte mit dem Schreiben und Formatieren auf GitHub](/articles/getting-started-with-writing-and-formatting-on-github).
- 
  term: GitHub Importer
  description: >-
    Ein Tool, das Quellcode-Repositorys, einschließlich der Commits und des Revisionsverlaufs, für die Benutzer schnell in GitHub importiert.
- 
  term: GitHub Jobs
  description: >-
    Eine GitHub-Website, auf der Auftraggeber Aufträge posten können, die für GitHub-Benutzer ggf. interessant sind.
- 
  term: GitHub Marketplace
  description: >-
    Eine Subsite für GitHub-Benutzer und -Organisationen, um Anwendungen zu erwerben und zu installieren, die ihren Workflow erweitern und ergänzen.
- 
  term: GitHub Pages
  description: >-
    Wird auch als „Seiten“ bezeichnet. Ein statischer Hosting-Dienst für Websites, mit dem Sie Ihre persönlichen, Organisations- oder Projektseiten direkt über ein GitHub-Repository hosten können.
- 
  term: GitHub Wiki
  description: Ein Abschnitt zum Hosten von Dokumentationen im Wiki-Stil in einem GitHub-Repository.
- 
  term: gitfile
  description: >-
    Eine unformatierte „.git“-Datei, die immer als Root einer Arbeitsstruktur fungiert und auf das Git-Verzeichnis verweist, in dem sich das gesamte Git-Repository und die zugehörigen Metadaten befinden. Sie können diese Datei für Ihr Repository an der Befehlszeile anzeigen, indem Sie „git rev-parse --git-dir“ verwenden. Hierbei handelt es sich um das reale Repository.
- 
  term: GraphQL
  description: >-
    Eine Abfragesprache für APIs und eine Laufzeit, um diese Abfragen mit Ihren vorhandenen Daten zu erfüllen.
- 
  term: HEAD
  description: Ein bestimmter Commit in einem Branch, normalerweise der aktuellste Commit an der Spitze des Branches.
- 
  term: Head-Branch
  description: Der Branch, dessen Änderungen in den Basis-Branch zusammengefasst werden, wenn Du einen Pull Request zusammenführst. Auch bekannt als der „Vergleichs-Branch."
- 
  term: 'Hello, World'
  description: >-
    Ein „Hello, World!“-Programm ist ein Computerprogramm, das einem Benutzer „Hello, World!“ ausgibt oder anzeigt. Da dieses Programm in der Regel sehr einfach ist, wird es oftmals als ein Beispiel für die Basissyntax einer Programmiersprache verwendet und fungiert als eine allgemeine erste Übung beim Erlernen einer neuen Programmiersprache.
- 
  term: Hochverfügbarkeit
  description: >-
    Ein System oder eine Komponente, das bzw. die für eine gewünschte Dauer kontinuierlich betriebsbereit ist.
- 
  term: Hook
  description: >-
    Während der normalen Ausführung verschiedener Git-Befehle werden Callouts an optionalen Skripts vorgenommen, wodurch ein Entwickler Funktionen hinzufügen oder überprüfen kann. In der Regel ermöglichen die Hooks, dass ein Befehl vorab verifiziert und möglicherweise abgebrochen wird. Zudem ermöglichen sie eine nachträgliche Benachrichtigung nach dem Vorgang.
- 
  term: Hostname
  description: >-
    Visuell lesbare Nicknames, die der Adresse eines mit einem Netzwerk verbundenen Geräts entsprechen.
- 
  term: Identicon
  description: >-
    Ein automatisch generiertes Bild, das als standardmäßiges Profilfoto verwendet wird, wenn sich Benutzer für GitHub registrieren. Benutzer können ihr Identicon durch ihr eigenes Profilfoto ersetzen.
- 
  term: Identitätsanbieter
  description: >-
    Wird auch als ein IdP bezeichnet. Ein vertrauenswürdiger Anbieter, der Ihnen ermöglicht, SAML Single Sign-On (SSO) zu verwenden, um auf andere Websites zuzugreifen.
- 
  term: Instanz
  description: >-
    Die private Kopie einer Organisation von GitHub, die auf einer virtuellen Maschine enthalten ist, die sie konfiguriert und kontrolliert.
- 
  term: Integration
  description: >-
    Eine in GitHub integrierte Drittanbieteranwendung. Hierbei kann es sich um GitHub Apps, OAuth-Apps oder Webhooks handeln.
- 
  term: Issue
  description: >-
    Issues sind vorgeschlagene Verbesserungen, Aufgaben oder Fragen hinsichtlich des Repositorys. Issues können von jedermann (für öffentliche Repositorys) erstellt und durch Repository-Mitarbeiter moderiert werden. Jeder Issue enthält seinen eigenen Diskussions-Thread. Sie können einen Issue auch mit Kennzeichnungen kategorisieren und ihn jemandem zuweisen.
- 
  term: Jekyll
  description: Ein Generator für statische Websites für persönliche, Projekt- oder Organisationswebsites.
- 
  term: Jekyll Theme Chooser
  description: >-
    Eine automatische Möglichkeit, ein visuelles Design für Ihre Jekyll-Website auszuwählen, ohne die CSS-Dateien zu bearbeiten oder zu kopieren.
- 
  term: Schlüssel-Fingerprint
  description: Eine kurze Folge an Bytes, die zum Identifizieren eines längeren öffentlichen Schlüssels verwendet wird.
- 
  term: Keychain
  description: Ein Passwortverwaltungssystem in macOS.
- 
  term: Stichwort
  description: Ein spezifisches Wort, das einen Issue schließt, wenn es in einem Pull Request verwendet wird.
- 
  term: Kennzeichnung
  description: >-
    Ein Tag oder ein Issue oder ein Pull Request. Repositorys enthalten einige Standardkennzeichnungen. Benutzer können jedoch benutzerdefinierte Kennzeichnungen erstellen.
- 
  term: LFS
  description: >-
    Git Large File Storage. Eine Open-Source-Git-Erweiterung für die Versionierung großer Dateien.
- 
  term: Lizenz
  description: >-
    Ein Dokument, das Sie in Ihr Projekt einbeziehen können, um Personen dahingehend zu informieren, was mit Ihrem Quellcode möglich ist und was nicht.
- 
  term: Linguist
  description: >-
    Eine auf GitHub verwendete Bibliothek zum Ermitteln von Blob-Sprachen, zum Ignorieren von Binär- oder weiterverkauften Dateien, zum Unterdrücken von generierten Dateien in Diff-Elementen und zum Generieren von Sprachaufschlüsselungsgrafiken.
- 
  term: Zeilenkommentar
  description: Ein Kommentar in einem Pull Request zu einer spezifischen Codezeile.
- 
  term: Zeilenabschluss
  description: >-
    Ein unsichtbares Zeichen oder Zeichen, das das Zeilenende in einer Textdatei symbolisiert.
- 
  term: gesperrtes persönliches Konto
  description: >-
    Ein persönliches Konto, auf das der Benutzer nicht zugreifen kann. Konten sind gesperrt, wenn Benutzer ihr bezahltes Konto auf ein kostenloses downgraden oder wenn ihr bezahlter Plan überfällig ist.
- 
  term: Managementkonsole
  description: >-
    Ein Abschnitt auf der GitHub Enterprise-Oberfläche mit enthaltenen Verwaltungsfeatures.
- 
  term: Markdown
  description: >-
    Markdown ist ein unglaublich einfaches semantisches Dateiformat und ähnelt .doc, .rtf und .txt. Mithilfe von Markdown können Benutzer ohne Know-how in Bezug auf Web-Publishing Fließtext (einschließlich Links, Listen, Aufzählungszeichen usw.) schreiben und ihn wie eine Website anzeigen. GitHub unterstützt Markdown und verwendet eine bestimmte Form von Markdown, das sog. GitHub Flavored Markdown. Siehe [GitHub Flavored Markdown – Spezifikation](https://github.github.com/gfm/) oder [Erste Schritte mit dem Schreiben und Formatieren auf GitHub](/articles/getting-started-with-writing-and-formatting-on-github).
- 
  term: Markup
  description: Ein System, um ein Dokument mit Anmerkungen zu versehen und zu formatieren.
- 
  term: main
  description: >-
    The default development branch. Whenever you create a Git repository, a branch named `main` is created, and becomes the active branch. In most cases, this contains the local development, though that is purely by convention and is not required.
- 
  term: Master
  description: >-
    The default branch in many Git repositories. By default, when you create a new Git repository on the command line a branch called `master` is created. Many tools now use an alternative name for the default branch. For example, when you create a new repository on GitHub the default branch is called `main`.
- 
  term: Mitgliederdiagramm
  description: Ein Repository-Diagramm, in dem alle Forks eines Repositorys gezeigt werden.
- 
  term: erwähnen
  description: >-
    Eine Benachrichtigung, die an einen Benutzer gesendet wird, indem seinem Benutzernamen das Symbol @ vorangestellt wird. Benutzer in einer Organisation auf GitHub können ebenfalls Bestandteil eines Teams sein, das erwähnt werden kann.
- 
  term: Merge
  description: >-
    Beim Mergen werden Änderungen von einem Branch (im selben Repository oder über einen Fork) verwendet und auf einen anderen angewendet. Dies erfolgt oft als „Pull Request“ (eine Merge-Anfrage) oder über die Befehlszeile. Ein Merge kann auf der GitHub.com-Weboberfläche durch einen Pull Request erfolgen, sofern keine in Konflikt stehenden Änderungen vorliegen. Alternativ kann er immer über die Befehlszeile vorgenommen werden.
- 
  term: Mergekonflikt
  description: >-
    Ein Unterschied, der zwischen gemergten Branches auftritt. Mergekonflikte treten auf, wenn verschiedene Änderungen an derselben Zeile derselben Datei vorgenommen werden oder wenn eine Person eine Datei bearbeitet und eine andere Person dieselbe Datei löscht. Der Mergekonflikt muss aufgelöst werden, bevor Sie die Branches mergen können.
- 
  term: Meilensteine
  description: >-
    Eine Möglichkeit, um den Fortschritt hinsichtlich Gruppen von Issues oder Pull Requests in einem Repository verfolgen zu können.
- 
  term: Spiegel
  description: Eine neue Kopie eines Repositorys.
- 
  term: untergeordnetes Team
  description: >-
    Ein untergeordnetes Team eines übergeordneten Teams. Sie können über mehrere untergeordnete Teams verfügen.
- 
  term: Netzwerkdiagramm
  description: >-
    Ein Repository-Diagramm, in dem der Branch-Verlauf des gesamten Repository-Netzwerks angezeigt wird, einschließlich der Branches des Root-Repositorys und der Branches der Forks, die netzwerkspezifische Commits enthalten.
- 
  term: News-Feed
  description: >-
    Eine aktive Ansicht der Repositorys oder Personen, die von Ihnen beobachtet werden können. Der News-Feed einer Organisation zeigt die Aktivität zu den Repositorys, die der Organisation gehören.
- 
  term: Non-Fast-Forward
  description: >-
    Wenn Ihre lokale Kopie eines Repositorys mit dem vorgelagerten Repository asynchron ist und Sie die vorgelagerten Änderungen abrufen müssen, bevor Sie Ihre lokalen Änderungen per Push-Vorgang übertragen.
- 
  term: Benachrichtigung
  description: >-
    Updates, delivered by either the web or email depending on your settings, that give you information about the activities you're interested in.
- 
  term: OAuth App
  description: >-
    Eine Drittanbieteranwendung, die für den Zugriff auf Benutzerinformationen anstelle von Passwörtern Zugriffstoken verwendet.
- 
  term: OAuth-Token
  description: Das in OAuth Apps verwendete Zugriffstoken, um auf Benutzerinformationen zuzugreifen.
- 
  term: externer Mitarbeiter
  description: >-
    Ein Benutzer, dem der Zugriff auf mindestens ein Repository einer Organisation erteilt wurde, der jedoch keinen anderen Zugriff auf die Organisation besitzt und auch kein Mitglied der Organisation ist.
- 
  term: Open-Source
  description: >-
    Open-Source-Software kann kostenlos verwendet, geändert und geteilt (in geänderter und unveränderter Form) werden. Inzwischen wird das Konzept von „Open-Source“ oftmals über die Software hinaus erweitert, um eine Philosophie der Zusammenarbeit zu repräsentieren, in der Arbeitsmaterialien online zur Verfügung gestellt werden. Auf diese Weise wird es möglich, daran Aufspaltungen oder Änderungen vorzunehmen, darüber zu diskutieren und etwas dazu beizutragen.
- 
  term: Organisation
  description: >-
    Organisationen sind Gruppen aus mindestens zwei Benutzern, die in der Regel reale Organisationen widerspiegeln. Sie werden durch Benutzer verwaltet und können Repositorys und Teams enthalten.
- 
  term: Organisationsinhaber
  description: Benutzer, die über einen vollständigen Verwaltungszugriff auf die ihnen gehörende Organisation verfügen.
- 
  term: Ursprung
  description: >-
    Das standardmäßig vorgelagerte Repository. Die meisten Projekte verfügen über mindestens ein vorgelagertes Projekt, das sie verfolgen. Standardmäßig wird „origin“ für diesen Zweck verwendet.
- 
  term: Inhaber
  description: >-
    Organisationsmitglieder, die über einen vollständigen Verwaltungszugriff auf die Organisation verfügen.
- 
  term: Übergeordnetes Team
  description: >-
    Das Hauptteam innerhalb von untergeordneten Teams, von dem untergeordnete Teams Zugriffsberechtigungen und @Erwähnungen übernehmen.
- 
  term: Teilnahmebenachrichtigungen
  description: >-
    Eine Benachrichtigung über eine Aktualisierung in einer Unterhaltung in einem Issue oder einem Pull Request, in dem Ihr Benutzername oder Team erwähnt wurde oder wo Sie zuvor in einem Kommentar geantwortet haben.
- 
  term: Permalink
  description: Ein permanenter statischer Hyperlink zu einer bestimmten Webseite.
- 
  term: persönliches Konto
  description: >-
    Ein GitHub-Konto, das zu einem einzelnen Benutzer gehört.
- 
  term: primäre E-Mail-Adresse
  description: >-
    Die Haupt-E-Mail-Adresse, an die GitHub Quittungen, Kreditkarten- oder PayPal-Abrechnungen und andere abrechnungsbezogene Kommunikationen sendet.
- 
  term: angeheftetes Repository
  description: >-
    Ein Repository, das von einem Benutzer auffällig in seinem Profil angezeigt wird.
- 
  term: Pre-Receive-Hooks
  description: >-
    Skripts, die auf dem GitHub Enterprise-Server ausgeführt werden, die Sie zum Implementieren von Qualitätsprüfungen verwenden können.
- 
  term: private Beiträge
  description: Die an einem privaten (vs. öffentlichen) Repository vorgenommenen Beiträge.
- 
  term: privates Repository
  description: >-
    Private Repositorys sind nur für den Repository-Inhaber und für die vom Inhaber angegebenen Mitarbeiter sichtbar.
- 
  term: Produktions-Branch
  description: >-
    Ein Branch mit endgültigen Änderungen, die in einer Anwendung oder auf einer Website verwendet oder bereitgestellt werden können.
- 
  term: Profil
  description: Die Seite, auf der Informationen zur Aktivität eines Benutzers auf GitHub angezeigt werden.
- 
  term: Profilfoto
  description: >-
    Ein benutzerdefiniertes Bild, das von Benutzern in der Regel zusammen mit ihrem Benutzernamen auf GitHub hochgeladen wurde, um ihre Aktivität zu identifizieren. Dies wird auch als Avatar bezeichnet.
- 
  term: Projektboard
  description: >-
    Boards innerhalb von GitHub, die aus Issues, Pull Requests und Hinweisen bestehen, die als Karten in Spalten organisiert sind.
- 
  term: geschützter Branch
  description: >-
    Geschützte Branches blockieren verschiedene Features von Git in einem Branch, dessen Schutz durch einen Repository-Administrator ausgewählt wird. Sie können weder zwangsweise per Push-Vorgang übertragen noch gelöscht werden, ihre Änderungen können nicht gemergt werden, ohne dass die erforderlichen Überprüfungen bestanden oder die erforderlichen Reviews genehmigt wurden, und es können keine Dateien auf der GitHub-Weboberfläche auf sie hochgeladen werden. Ein geschützter Branch ist in der Regel der Standardbranch.
- 
  term: öffentliche Beiträge
  description: Die an einem öffentlichen (vs. privaten) Repository vorgenommenen Beiträge.
- 
  term: öffentliches Repository
  description: >-
    Öffentliche Repositorys können von jedermann angezeigt werden, darunter Personen, die keine GitHub-Benutzer sind.
- 
  term: abrufen
  description: >-
    Abrufen bezieht sich auf das Abrufen und Mergen von Änderungen. Wenn beispielsweise jemand die Remote-Datei bearbeitet hat, an der Sie arbeiten, möchten Sie diese Änderungen in Ihre lokale Kopie einpflegen, damit sie aktuell ist. Siehe auch „abrufen“.
- 
  term: Abrufzugriff
  description: Ein Synonym für Lesezugriff.
- 
  term: Pull Request
  description: >-
    Pull Requests sind vorgeschlagene Änderungen an einem Repository, die von einem Benutzer abgesendet und von den Mitarbeitern eines Repositorys akzeptiert oder abgelehnt werden. Pull Requests besitzen analog zu Issues ihr eigenes Diskussionsforum.
- 
  term: Pull-Request-Review
  description: >-
    Kommentare von Mitarbeitern zu Pull Requests, welche die Änderungen genehmigen oder weitere Änderungen anfordern, bevor der Pull Request gemergt wird.
- 
  term: Pulse-Diagramm
  description: Ein Repository-Diagramm, in dem Sie eine Übersicht zur Aktivität eines Repositorys erhalten.
- 
  term: Punch-Diagramm
  description: >-
    Ein Repository-Diagramm, das die Häufigkeit der Aktualisierungen an einem Repository basierend auf dem Wochentag und der Uhrzeit anzeigt.
- 
  term: Push
  description: >-
    Ein Push bedeutet, das Sie Ihre durchgeführten Änderungen an ein Remote-Repository auf GitHub.com senden. Wenn Sie beispielsweise lokale Änderungen vornehmen, können Sie diese Änderungen per Push-Vorgang senden, damit andere darauf zugreifen können.
- 
  term: Branch per Push-Vorgang übertragen
  description: >-
    Wenn Du einen Branch erfolgreich auf ein Remote-Repository überträgst, wirst Du das Remote-Repository mit Änderungen aus dem lokalen Branch aktualisieren. Wenn Du „einen Branch per Push überträgst", wird Git nach der HEAD-Referenz des Branches im Remote-Repository suchen und verifizieren, dass er ein direkter Vorgänger der lokalen HEAD-Referenz des Branches ist. Sobald dies verifiziert ist, wird Git alle Objekte (die über die lokale HEAD-Referenz erreichbar sind und auf dem Remote-Repository fehlen) in die Remote-Objekt-Datenbank abrufen und dann die Remote-HEAD-Referenz aktualisieren. Wenn der Remote-HEAD kein Vorgänger des lokalen HEAD ist, wird der Push fehlschlagen.
- 
  term: Push-Zugriff
  description: Ein Synonym für Schreibzugriff.
- 
  term: Lesezugriff
  description: >-
    Eine Berechtigungsebene für ein Repository, die dem Benutzer erlaubt, Informationen vom Repository abzurufen oder zu lesen. Alle öffentlichen Repositorys erteilen allen GitHub-Benutzern Lesezugriff. Ein Synonym für Abrufzugriff.
- 
  term: README
  description: Eine Textdatei, die Informationen zu den Dateien in einem Repository enthält. Hierbei handelt es sich in der Regel um die erste Datei, die einem Besucher Ihres Repositorys angezeigt wird. Eine README-Datei zusammen mit einer Repository-Lizenz, Beitragsrichtlinien und einem Verhaltenskodex, mit der Sie Ihre Erwartungen und Beiträge zu Ihrem Projekt verwalten können.
- 
  term: Rebase
  description: >-
    Um eine Reihe an Änderungen von einem Branch erneut auf eine andere Basis anzuwenden und den HEAD dieses Branches auf das Ergebnis zurückzusetzen.
- 
  term: Recover Accounts Elsewhere
  description: >-
    Ermöglicht Benutzern, einen zusätzlichen Sicherheitsfaktor zu ihrem GitHub-Konto für den Fall hinzuzufügen, dass sie ihren Zugriff auf ihre Zwei-Faktor-Authentifizierungsmethode oder ihre Wiederherstellungscodes verlieren. Benutzer können ihr GitHub-Konto ihrem Facebook-Konto zuordnen, indem sie die Authentifizierungsanmeldeinformationen in der Form eines Kontowiederherstellungstokens für ihr GitHub-Konto mit Facebook speichern.
- 
  term: Wiederherstellungscode
  description: Ein Code, der Ihnen dabei hilft, den Zugriff auf Ihr GitHub-Konto zurückzuerlangen.
- 
  term: Release
  description: Die Art, wie GitHub Pakete erstellt und Software Benutzern bereitstellt.
- 
  term: remote
  description: >-
    Dies ist die Version eines Repositorys oder Branches, das bzw. der auf einem Server gehostet wird, am ehesten GitHub.com. Remote-Versionen können mit lokalen Klonen verbunden werden, sodass Änderungen synchronisiert werden können.
- 
  term: Remote-Repository
  description: >-
    Ein Repository, das zum Verfolgen desselben Projekts verwendet wird, sich jedoch anderswo befindet.
- 
  term: Remote-URL
  description: >-
    Der Speicherort Ihres Codes: ein Repository auf GitHub, im Fork eines anderen Benutzers oder sogar auf einem anderen Server.
- 
  term: Replikat
  description: >-
    Eine GitHub Enterprise-Instanz, die Redundanz für die primäre GitHub Enterprise-Instanz bereitstellt.
- 
  term: Repository
  description: >-
    Ein Repository ist das grundlegendste Element von GitHub. Es lässt sich am ehesten als Ordner eines Projekts vorstellen. Ein Repository enthält alle Projektdateien (einschließlich der Dokumentation) und speichert den Revisionsverlauf jeder Datei. Repositorys können mehrere Mitarbeiter aufweisen und öffentlich oder privat sein.
- 
  term: Repository-Diagramm
  description: Eine visuelle Darstellung der Daten Ihres Repositorys.
- 
  term: Repository-Betreuer
  description: >-
    Eine Person, die ein Repository verwaltet. Diese Person kann bei der Issue-Suche helfen und Kennzeichnungen und andere Features verwenden, um die Arbeit des Repositorys zu verwalten. Darüber hinaus ist diese Person möglicherweise dafür verantwortlich, dass die README- und die beitragenden Dateien aktuell bleiben.
- 
  term: erforderliche Pull-Request-Review
  description: >-
    Mithilfe von erforderlichen Reviews wird sichergestellt, dass Pull Requests mindestens einen genehmigten Review aufweisen, bevor Mitarbeiter Änderungen an einem geschützten Branch vornehmen können.
- 
  term: erforderlicher Statuscheck
  description: >-
    Überprüfungen zu Pull Requests, wodurch sichergestellt wird, dass alle erforderlichen CI-Tests bestanden wurden, bevor Mitarbeiter Änderungen an einem geschützten Branch vornehmen können.
- 
  term: beheben
  description: Die Aktion der manuellen Korrektur eines fehlgeschlagenen automatischen Mergevorgangs.
- 
  term: rückgängig machen
  description: >-
    Wenn Sie einen Pull Request auf GitHub rückgängig machen, wird automatisch ein neuer Pull Request geöffnet, der einen Commit aufweist, der den Merge-Commit aus dem ursprünglich gemergten Pull Request rückgängig macht. In Git können Sie Commits mit „git revert“ rückgängig machen.
- 
  term: Review
  description: >-
    Mit Reviews können andere mit Zugriff auf Ihr Repository die in Pull Requests vorgeschlagenen Änderungen kommentieren, Änderungen genehmigen oder weitere Änderungen anfragen, bevor der Pull Request gemergt wird.
- 
  term: Root-Verzeichnis
  description: Das erste Verzeichnis in einer Hierarchie.
- 
  term: Root-Dateisystem
  description: Das Basisbetriebssystem und die GitHub Enterprise-Anwendungsumgebung.
- 
  term: gespeicherte Antwort
  description: >-
    Ein Kommentar, den Sie speichern und zu Ihrem GitHub-Benutzerkonto hinzufügen können, damit Sie ihn in der gesamten GitHub-Lösung in Issues und Pull Requests verwenden können.
- 
  term: Umfang
  description: >-
    Benannte Gruppe an Berechtigungen, die von einer OAuth App angefragt werden können, um auf öffentliche und private Daten zuzugreifen.
- 
  term: Benutzer
  description: >-
    Ein Benutzer innerhalb einer GitHub Enterprise-Organisation wird auch als „Benutzeranzahl“ bezeichnet.
- 
  term: Nichtöffentliches Team
  description: >-
    Ein Team, das nur für andere Personen im Team und für Personen mit Inhaberberechtigungen sichtbar ist.
- 
  term: Sicherheitsprotokoll
  description: >-
    Ein Protokoll, in dem die letzten 50 Aktionen oder die Aktionen aufgelistet werden, die in den letzten 90 Tagen durchgeführt wurden.
- 
  term: Dienst-Hook
  description: >-
    Wird auch als „Webhook“ bezeichnet. Webhooks bieten die Möglichkeit, Benachrichtigungen an einen externen Webserver zu senden, wenn bestimmte Aktionen in einem Repository oder in einer Organisation auftreten.
- 
  term: Single Sign-On
  description: >-
    Wird auch als SSO bezeichnet. Dadurch kann sich der Benutzer an einem einzelnen Ort (Identity Provider, IdP) anmelden, wodurch der Benutzer anschließend Zugriff auf andere Dienstanbieter erhält.
- 
  term: Snapshot
  description: Ein Checkpoint einer virtuellen Maschine zu einem bestimmten Zeitpunkt.
- 
  term: squashen
  description: Um mehrere Commits in einem einzelnen Commit zu kombinieren, auch ein Git-Befehl.
- 
  term: SSH-Schlüssel
  description: >-
    SSH-Schlüssel sind ein Weg, sich selber gegenüber einem Online-Server mittels einer verschlüsselten Nachricht zu identifizieren. Es ist wie wenn Dein Computer ein eigenes, eindeutiges Passwort für einen anderen Dienst hat. {% data variables.product.product_name %} verwendet SSH-Schlüssel um Informationen sicher an Deinen Computer zu übermitteln.
- 
  term: Testinstanz
  description: >-
    Eine Möglichkeit, Änderungen zu testen, bevor sie auf Ihre tatsächliche GitHub Enterprise-Instanz angewendet werden.
- 
  term: Status
  description: >-
    Eine visuelle Darstellung innerhalb eines Pull Requests dahingehend, dass Ihre Commits die für das Repository festgelegten Bedingungen erfüllen, an dem Sie mitwirken.
- 
  term: Statuschecks
  description: >-
    Statusprüfungen sind externe Prozesse, z. B. kontinuierliche Integrations-Builds, die für jeden Commit ausgeführt werden, den Du in einem Repository erstellst. Weitere Informationen findest Du unter „[Über Statusprüfungen](/articles/about-status-checks)."
- 
  term: Stern
  description: >-
    Ein Lesezeichen oder eine Anzeige der Wertschätzung für ein Repository. Mit Sternen kann die Beliebtheit von Projekten manuell eingestuft werden.
- 
  term: Abonnement
  description: Der GitHub-Plan eines Benutzers oder einer Organisation.
- 
  term: Team
  description: >-
    Eine Gruppe von Organisationsmitgliedern, welche die Struktur Ihres Unternehmens oder Ihrer Gruppe mit kaskadierenden Zugriffsberechtigungen und Erwähnungen anzeigt.
- 
  term: Team-Betreuer
  description: >-
    Organisationsmitglieder, die über eine Teilmenge von Berechtigungen verfügen, die den Organisationsinhabern zur Verwaltung von Teams zur Verfügung stehen.
- 
  term: Team-Plan
  description: >-
    Ein Organisationsabrechnungsplan, der Ihnen unbegrenzte öffentliche und private Repositorys bereitstellt.
- 
  term: Zeitleiste
  description: Eine Reihe von Ereignissen in einem Pull Request oder in einem Benutzerprofil.
- 
  term: Themen-Branch
  description: >-
    Ein regulärer Git-Branch, der durch einen Entwickler verwendet wird, um eine konzeptionelle Entwicklungslinie zu identifizieren. Da Branches sehr einfach und günstig sind, empfiehlt es sich oft, über verschiedene kleine Branches zu verfügen, die jeweils über sehr gut definierte Konzepte oder kleine und damit verbundene Änderungen verfügen. Er kann auch als ein Feature-Branch bezeichnet werden.
- 
  term: Themen
  description: >-
    Eine Möglichkeit, Repositorys in einem bestimmten Themenbereich zu erkunden, nach Projekten zu suchen, zu denen beigetragen werden soll, und neue Lösungen zu einem spezifischen Problem auf GitHub zu finden.
- 
  term: Traffic-Diagramm
  description: >-
    Ein Repository-Diagramm, das den Traffic eines Repositorys anzeigt, darunter die vollständigen Klone (nicht Abrufe), Besucher der letzten 14 Tage, verweisende Websites und beliebte Inhalte.
- 
  term: übertragen
  description: >-
    Wenn ein Repository übertragen wird, wird der Inhaber eines Repositorys geändert. Der neue Inhaber kann die Inhalte, Issues, Pull Requests, Veröffentlichungen und Einstellungen des Repositorys sofort verwalten.
- 
  term: vorgelagert
  description: >-
    Bei einem Branch oder Fork wird der primäre Branch des ursprünglichen Repositorys oftmals als „vorgelagert“ bezeichnet, da es sich hierbei um den Hauptplatz handelt, an dem andere Änderungen eingehen. Der Branch/Fork, an dem Sie arbeiten, wird entsprechend als „nachgelagert“ bezeichnet. Wird auch als „origin“ bezeichnet.
- 
  term: vorgelagerter Branch
  description: >-
    Der Standardbranch, der in den entsprechenden Branch (oder auf dem der entsprechende Branch umbasiert wird) gemergt wird. Er wird mittels „branch.<name>.remote“ und „branch.<name>.merge“ konfiguriert. Wenn der vorgelagerte Branch von A origin/B ist, wird manchmal gesagt „A verfolgt origin/B“.
- 
  term: Benutzer
  description: >-
    Benutzer sind Personen mit persönlichen GitHub-Konten. Jeder Benutzer besitzt ein persönliches Profil und kann über mehrere öffentliche oder private Repositorys verfügen. Sie können Organisationen erstellen oder zum Beitritt eingeladen werden oder am Repository eines anderen Benutzers zusammenarbeiten.
- 
  term: Benutzername
  description: Der Handle eines Benutzers auf GitHub.
- 
  term: öffentliches Team
  description: Ein Team, das von jedem Organisationsmitglied angesehen und @erwähnt werden kann.
- 
  term: beobachten
  description: >-
    Sie können ein Repository oder Issue beobachten, um Benachrichtigungen zu empfangen, wenn an einem Issue oder an einem Pull Request Aktualisierungen vorgenommen werden.
- 
  term: Beobachtungsbenachrichtigungen
  description: Eine Benachrichtigung zur Aktivität in einem Repository, das von einem Benutzer abonniert wurde.
- 
  term: Webbenachrichtigungen
  description: >-
    Die auf der Weboberfläche auf GitHub angezeigten Benachrichtigungen: https://github.com/notifications
- 
  term: Webhooks
  description: >-
    Mithilfe von Webhooks können Sie GitHub Apps erstellen oder einrichten, die bestimmte Ereignisse auf GitHub.com abonnieren. Webhooks bieten eine Möglichkeit zum Senden von Benachrichtigungen an einen externen Webserver, sobald bestimmte Aktionen in einem Repository oder in einer Organisation auftreten. Werden auch als Dienst-Hook bezeichnet.
- 
  term: Works with GitHub
  description: Eine Auflistung der Integrationen, die in GitHub funktionieren.
- 
  term: Schreibzugriff
  description: >-
    Eine Berechtigungsebene in einem Repository, die dem Benutzer ermöglicht, Änderungen per Push-Vorgang an das Repository zu übertragen oder in das Repository zu schreiben.
