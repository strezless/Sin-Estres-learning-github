---
- 
  term: '@menção'
  description: notificar uma pessoa no GitHub adicionando `@` antes do nome de usuário. Os usuários de uma organização no GitHub também podem integrar uma equipe que pode ser mencionada.
- 
  term: token de acesso
  description: >-
    Token usado no lugar de uma senha ao executar operações do Git em HTTPS com Git na linha de comando ou na API. Também chamado de token de acesso pessoal.
- 
  term: token de recuperação de conta
  description: >-
    Credencial de autenticação armazenada como parte de uma configuração de recuperação de conta chamada Recuperação de contas em outro lugar que permite armazenar essa credencial de backup.
- 
  term: Visualização da API
  description: >-
    Forma de testar novas APIs e alterações nos métodos existentes antes de integrá-las como parte da API oficial do GitHub.
- 
  term: appliance
  description: >-
    Aplicativo de software combinado com o sistema operacional just enough (JeOS) para execução ideal em um hardware padrão do setor (geralmente um servidor) ou em uma máquina virtual.
- 
  term: responsável
  description: Usuário responsável por um problema.
- 
  term: código de autenticação
  description: >-
    Um código que você irá fornecer, além da sua senha do GitHub, ao entrar com 2FA pelo navegador. Este código é gerado por um aplicativo ou enviado ao seu telefone por meio de mensagem de texto. Também chamado de "Código de autenticação 2FA".
- 
  term: branch base
  description: O branch em que as alterações são combinadas quando você faz merge da pull request. Quando você cria uma pull request, é possível alterar o branch base do branch padrão do repositório para outro branch, se necessário.
- 
  term: autenticação básica
  description: >-
    Um método de autenticação em que as credenciais são enviadas como texto não criptografado.
- 
  term: bio
  description: >-
    Descrição gerada pelo usuário em um perfil: https://help.github.com/articles/adding-a-bio-to-your-profile/
- 
  term: ciclo de cobrança
  description: Intervalo de tempo do seu plano de cobrança.
- 
  term: e-mail de cobrança
  description: >-
    Endereço de e-mail da organização para o qual o GitHub envia recibos, cobranças de cartão de crédito ou PayPal e outras comunicações relacionadas.
- 
  term: gerente de cobrança
  description: Integrante que gerencia as configurações de cobrança de uma organização.
- 
  term: plano de cobrança
  description: >-
    Planos de pagamento para usuários e organizações, com recursos definidos e personalizados.
- 
  term: blame
  description: >-
    O recurso "blame" do Git descreve a última modificação de cada linha de um arquivo, que geralmente exibe a revisão, o autor e a hora. Por exemplo, serve para rastrear quando um recurso foi adicionado ou para identificar qual commit ocasionou determinado erro.
- 
  term: bloquear
  description: >-
    Remover a possibilidade de um usuário colaborar nos repositórios da organização.
- 
  term: branch
  description: >-
    Um branch é uma versão paralela de um repositório. O branch está contido no repositório, mas não afeta o branch principal ou mestre, o que permite trabalhar livremente sem interromper a versão ativa. Após concluir as alterações necessárias, você poderá fazer merge entre o branch alterado e o branch mestre para publicar as alterações.
- 
  term: restrição de branch
  description: >-
    Restrição que os administradores do repositório podem ativar para que apenas determinados usuários ou equipes consigam fazer push ou alterações no branch.
- 
  term: plano de Negócios
  description: >-
    Plano de cobrança da organização que permite colaborar em repositórios públicos e privados, definir que os integrantes se autentiquem no GitHub usando SAML SSO e provisionar o acesso com SAML ou SCIM.
- 
  term: certificado CA
  description: >-
    Certificado digital emitido por uma Autoridade Certificada (CA, Certificate Authority) que garante a existência de conexões válidas entre duas máquinas, como o computador de um usuário e o GitHub.com. O certificado também verifica a propriedade de sites.
- 
  term: cartão
  description: Quadrado móvel em um quadro de projeto associado a um problema ou pull request.
- 
  term: Verificação
  description: >-
    Uma verificação é um tipo de verificação de status em {% data variables.product.product_name %}. Consulte "[Verificações de status](#status-checks)".
- 
  term: fazer checkout
  description: >-
    É possível usar `git checkout` na linha de comando para criar um branch, alterar o branch atual ou alternar para outra versão de um arquivo em um branch diferente com `git checkout [nomedobranch] [caminho para o arquivo]`. A ação "checkout" atualiza árvore de trabalho (inteira ou em parte) com um blob ou objeto da árvore do banco de dados de objeto, atualizando o índice e HEAD caso a árvore de trabalho esteja apontando para um novo branch.
- 
  term: cherry-picking
  description: >-
    Escolher um subconjunto em uma série de alterações (geralmente commits) e registrá-lo como uma nova série de alterações em uma base de código diferente. No Git, isso acontece pelo comando `git cherry-pick` para extrair a alteração apresentada por um commit existente em outro branch e registrá-la com base no branch atual como um novo commit.
- 
  term: equipe secundária
  description: >-
    Em equipes aninhadas, subequipe que herda as permissões de acesso e as @menções da equipe principal.
- 
  term: limpo
  description: >-
    Uma árvore de trabalho está limpa se corresponder à revisão referenciada pelo HEAD. Veja também "dirty".
- 
  term: clone
  description: >-
    Clone é a cópia de um repositório que fica no seu computador, em vez de ficar em algum lugar do servidor de um site. Criar um clone permite alterar os arquivos no editor de sua escolha e usar o Git para monitorar suas alterações sem precisar estar online. O repositório clonado continua conectado à versão remota, de modo que você possa fazer push das alterações locais para manter as duas versões sincronizadas quando estiver online.
- 
  term: clustering
  description: >-
    Capacidade de executar os serviços do GitHub Enterprise em vários nós e solicitações de balanceamento de carga entre eles.
- 
  term: gráfico de código de frequência
  description: >-
    Gráfico de repositório que mostra as adições e exclusões de conteúdo para cada semana no histórico de um repositório.
- 
  term: código de conduta
  description: Documento que define padrões de interação em uma comunidade.
- 
  term: proprietário do código
  description: >-
    Pessoa designada como proprietária de parte do código de um repositório. O proprietário do código é automaticamente chamado para revisão quando alguém abre uma pull request (sem ser no modo rascunho) que altera o código pertencente ao proprietário em questão.
- 
  term: colaborador
  description: >-
    Colaborador é uma pessoa com acesso de leitura e gravação em um repositório e que foi convidada a contribuir pelo proprietário do repositório.
- 
  term: commit
  description: >-
    Commit, ou "revisão", é uma alteração individual em um arquivo (ou conjunto de arquivos). Quando você faz um commit para salvar seu trabalho, o Git cria um ID exclusivo (também conhecido como "SHA" ou "hash") que mantém um registro das alterações, dos autores e de quando as alterações foram feitas. Em geral, os commits têm uma mensagem que mostra uma breve descrição das alterações.
- 
  term: autor do commit
  description: Usuário que fez o commit.
- 
  term: gráfico de commits
  description: >-
    Gráfico que mostra todos os commits feitos em um repositório no ano anterior.
- 
  term: ID do commit
  description: Também conhecido como "SHA", é um hash de soma de verificação de 40 caracteres que identifica o commit.
- 
  term: mensagem do commit
  description: >-
    Texto breve e descritivo que acompanha um commit e comunica a alteração que o commit apresenta.
- 
  term: comparar branches
  description: >-
    O branch que você usa para criar uma pull request. Esse branch é comparado ao branch base que você escolheu para a pull request, e as alterações são identificadas. Quando a pull request faz o merge, o branch base é atualizado com as alterações do branch de comparação. Também conhecido como o "branch head" da pull request.
- 
  term: integração contínua
  description: >-
    Também conhecida como CI, do inglês Continuous Integration, é um processo que executa compilações e testes automatizados quando alguém faz commit de uma alteração em um repositório configurado no GitHub. Por ajudar a detectar erros, a CI é uma prática recomendada comum no desenvolvimento de software.
- 
  term: gráfico de contribuição
  description: >-
    Parte do perfil de um usuário que mostra suas contribuições diárias em um período de até um ano.
- 
  term: diretrizes de contribuição
  description: Documento que explica como as pessoas devem contribuir para o seu projeto.
- 
  term: contribuições
  description: >-
    Atividades específicas no GitHub que: - Adicionarão um quadrado ao gráfico de contribuição de um usuário: "[O que conta como contribuição](https://help.github.com/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)" - Adicionarão atividades à linha do tempo de um usuário no perfil: "[Atividade de contribuição](https://help.github.com/articles/viewing-contributions-on-your-profile/#contribution-activity)"
- 
  term: contribuidor
  description: >-
    Contribuidor é uma pessoa que não tem acesso de colaborador a um repositório, mas que contribuiu para um projeto e cuja pull request passou por merge no repositório.
- 
  term: gráfico de contribuidores
  description: Gráfico que exibe os 100 principais contribuidores de um repositório.
- 
  term: cupom
  description: >-
    Código fornecido pelo GitHub para usuários ou organizações pagarem suas assinaturas integral ou parcialmente.
- 
  term: cron
  description: Agendador de trabalhos baseado em tempo para uso em sistemas operacionais de computadores do tipo Unix.
- 
  term: cURL
  description: Usado em scripts ou linhas de comando para transferir dados.
- 
  term: Painel
  description: >-
    Seu painel pessoal é o principal centro da sua atividade no GitHub. No seu painel pessoal, você pode monitorar problemas e pull requests que está acompanhando ou nos quais está trabalhando, acessar os seus melhores repositórios e páginas de equipe e aprender sobre as atividades recentes em repositórios dos quais você está assistindo ou participando. Também é possível descobrir novos repositórios, que são recomendados com base em usuários que você está seguindo e com base em repositórios que você favoritou. Para visualizar somente as atividades de uma organização específica, visite o painel da sua organização. Para obter mais informações, consulte "[Sobre o seu painel pessoal](/articles/about-your-personal-dashboard)" ou "[Sobre o painel da sua organização](/articles/about-your-organization-dashboard)."
- 
  term: branch padrão
  description: >-
    O branch de base para novos pull requests e commits de código em um repositório. Cada repositório tem pelo menos um branch, que o Git cria quando você inicializa o repositório. O primeiro branch é geralmente denominado `main`, e é, muitas vezes, o branch-padrão.
- 
  term: gráfico de dependentes
  description: >-
    Gráfico que mostra os pacotes, projetos e repositórios que dependem de um repositório público.
- 
  term: Gráfico de dependências
  description: >-
    Gráfico que mostra os pacotes e projetos dos quais o repositório depende.
- 
  term: chave de implantação
  description: >-
    Chave de implantação é uma chave SSH armazenada no seu servidor que dá acesso a um único repositório GitHub. Essa chave é vinculada diretamente ao repositório, e não a uma conta de usuário pessoal.
- 
  term: HEAD desanexado
  description: >-
    O Git avisará se você estiver trabalhando em um HEAD desanexado, ou seja, quando o Git não estiver apontando para um branch e nenhum commit seu aparecer no histórico de commits. Por exemplo, quando você faz checkout de um commit arbitrário que não foi o commit mais recente de um branch específico, você está trabalhando em um "HEAD desanexado".
- 
  term: diagnóstico
  description: Visão geral das configurações e do ambiente de uma instância do GitHub Enterprise.
- 
  term: diff
  description: >-
    O diff é a diferença nas alterações entre dois commits ou o registro das alterações salvas. O diff descreverá visualmente o que foi adicionado ou removido de um arquivo desde o commit mais recente.
- 
  term: sujo
  description: >-
    Uma árvore de trabalho é considerada "suja" se contiver modificações que não passaram por commit no branch atual.
- 
  term: notificações de e-mail
  description: Notificações enviadas para o endereço de e-mail de um usuário.
- 
  term: conta corporativa
  description: As contas corporativas permitem que você gerencie a política e a cobrança centralmente para várias organizações de {% data variables.product.prodname_dotcom_the_website %}. {% data reusables.gated-features.enterprise-accounts %}
- 
  term: Explorador
  description: >-
    Instância do GraphiQL, que é um ambiente GraphQL IDE gráfico, interativo e integrado ao navegador.
- 
  term: fast-forward
  description: >-
    Fast-forward é um tipo especial de merge no qual você tem uma revisão e faz um merge das alterações de outro branch descendente do seu. Nesse caso, em vez de fazer um novo commit do merge, basta atualizar a revisão. Esse procedimento acontece com frequência em branches de acompanhamento remoto em repositórios remotos.
- 
  term: branch de recurso
  description: >-
    Branch usado para testar novos recursos ou corrigir problemas que não estejam em produção. Também é conhecido como branch de tópico.
- 
  term: bloco de código isolado
  description: 'Bloco de código com recuo que você pode criar com markdown em estilo GitHub usando barra inversa tripla \`\`\ antes e depois do bloco de código. Consulte este [example] (https://help.github.com/en/articles/creating-and-highlighting-code-blocks#fenced-code-blocks).'
- 
  term: fetch
  description: >-
    Ao usar `git fetch`, você inclui alterações do repositório remote no seu branch local sem comprometê-las. Diferentemente do que ocorre com `git pull`, fazer fetch permite revisar as alterações antes de fazer commit delas no branch local.
- 
  term: seguir (usuários)
  description: Receber notificações sobre as contribuições e atividades de outro usuário.
- 
  term: push forçado
  description: >-
    Push do Git que sobrescreve o repositório remote com alterações locais sem considerar conflitos.
- 
  term: bifurcação
  description: >-
    Bifurcação é uma cópia pessoal do repositório de outro usuário na sua conta. As bifurcações permitem alterar um projeto livremente sem afetar o repositório upstream original. Também é possível abrir uma pull request no repositório upstream e manter a bifurcação sincronizada com as alterações mais recentes, já que os dois repositórios ainda estão conectados.
- 
  term: plano Grátis
  description: >-
    Plano de cobrança grátis para contas de usuário. Os usuários podem contribuir em repositórios públicos ilimitados com colaboradores ilimitados.
- 
  term: Gist
  description: >-
    Gist é um arquivo compartilhável que você pode editar, clonar e bifurcar no GitHub. É possível deixar um gist público ou secreto, embora os secretos sempre fiquem disponíveis para qualquer pessoa que tenha a URL.
- 
  term: Git
  description: >-
    O Git é um programa de código aberto para rastrear alterações em arquivos de textos. Compilado pelo autor do sistema operacional Linux, é a tecnologia principal sobre a qual o GitHub, a interface social e de usuário, foi desenvolvida.
- 
  term: aplicativo GitHub
  description: >-
    Os aplicativos do GitHub servem para toda a organização e usam sua própria identidade ao executar as funções. Podem ser instalados diretamente em organizações e contas de usuários, recebem acesso a repositórios específicos, têm permissões granulares e webhooks integrados.
- 
  term: markdown em estilo GitHub
  description: Markdown específico do GitHub usado para formatar texto e código no GitHub. Consulte [Espec. markdown em estilo GitHub](https://github.github.com/gfm/) ou [Introdução à gravação e formatação no GitHub](/articles/getting-started-with-writing-and-formatting-on-github).
- 
  term: Importador do GitHub
  description: >-
    Ferramenta que importa rapidamente repositórios do código-fonte, incluindo commits e histórico de revisão, para os usuários do GitHub.
- 
  term: GitHub Jobs
  description: >-
    Site do GitHub em que empregadores podem publicar trabalhos que possam vir a despertar o interesse dos usuários.
- 
  term: GitHub Marketplace
  description: >-
    Subsite em que usuários e organizações do GitHub podem comprar e instalar aplicativos que ampliam e complementam seus fluxos de trabalho.
- 
  term: GitHub Pages
  description: >-
    Também conhecido como Pages, é um serviço de hospedagem de site estático feito para hospedar suas páginas pessoais, de organização ou de projeto diretamente em um repositório do GitHub.
- 
  term: Wiki do GitHub
  description: Seção para hospedar documentação em estilo wiki em um repositório do GitHub.
- 
  term: arquivo git
  description: >-
    Arquivo `.git` simples que fica sempre na raiz de uma árvore de trabalho e aponta para o diretório Git, que tem todo o repositório do Git e seus metadados. É possível exibir este arquivo no seu repositório na linha de comando com `git rev-parse --git-dir`, que é o repositório real.
- 
  term: GraphQL
  description: >-
    Linguagem de consulta para APIs e um tempo de execução para atender a essas consultas com os dados existentes.
- 
  term: HEAD
  description: Um commit definido de um branch, geralmente o commit mais recente na ponta do branch.
- 
  term: branch head
  description: O branch cujas alterações são combinadas no branch base quando você faz o merge de uma pull request. Também conhecido como "branch de comparação".
- 
  term: 'Hello, World'
  description: >-
    "Hello, World" é um programa de computador que exibe a frase ""Hello, World!" para um usuário. Por ser muito simples, esse programa costuma ser usado como exemplo da sintaxe básica de uma linguagem de programação e serve como exercício inicial para aprendizes de nível básico.
- 
  term: alta disponibilidade
  description: >-
    Sistema ou componente que se mantém em operação por um período longo.
- 
  term: hook
  description: >-
    Durante a execução normal de vários comandos do Git, os call-outs são feitos para scripts opcionais que permitem ao desenvolvedor adicionar funcionalidades ou verificação. Em geral, os hooks permitem verificar e até mesmo abortar um comando, permitindo também uma notificação após a operação.
- 
  term: nome de host
  description: >-
    Apelidos legíveis por humanos que correspondem ao endereço de um dispositivo conectado a uma rede.
- 
  term: identicon
  description: >-
    Imagem gerada automaticamente e usada como foto de perfil padrão quando os usuários fazem login no GitHub. Os usuários podem trocar o identificador por outra foto no perfil.
- 
  term: provedor de identidade
  description: >-
    Também conhecido como IdP, é um provedor confiável que permite usar o logon único (SSO) do SAML para acessar outros sites.
- 
  term: instância
  description: >-
    Cópia privada de uma organização do GitHub contida em uma máquina virtual configurável e controlável.
- 
  term: integração
  description: >-
    Aplicativo de terceiros que se integra ao GitHub. Podem ser aplicativos do GitHub, aplicativos do OAuth ou webhooks.
- 
  term: problema
  description: >-
    Problemas são sugestões de melhorias, tarefas ou questões relacionadas ao repositório. Podem ser criados por qualquer pessoa (em repositórios públicos) e são moderados por colaboradores do repositório. Cada problema tem seu próprio thread de discussão, e também é possível categorizar os problemas com marcadores e atribuí-los a outras pessoas.
- 
  term: Jekyll
  description: Gerador de site estático para sites pessoais, de projeto ou da organização.
- 
  term: seletor de temas Jekyll
  description: >-
    Forma automatizada de selecionar um tema visual para o seu site no Jekyll sem editar ou copiar arquivos CSS.
- 
  term: impressão digital da chave
  description: Sequência curta de bytes usada para identificar uma chave pública mais longa.
- 
  term: keychain
  description: Sistema de gerenciamento de senhas no macOS.
- 
  term: palavra-chave
  description: Palavra específica que encerra um problema quando usada em uma pull request.
- 
  term: etiqueta
  description: >-
    Tag em um problema ou pull request. Repositórios vêm com uma série de etiquetas padrão, mas os usuários podem criar etiquetas personalizadas.
- 
  term: LFS
  description: >-
    Git Large File Storage. Extensão de código aberto do Git para controlar versões de arquivos grandes.
- 
  term: licença
  description: >-
    Documento que você pode incluir no projeto para mostrar o que as pessoas podem e não podem fazer com o seu código-fonte.
- 
  term: Linguist
  description: >-
    Biblioteca usada no GitHub para detectar linguagens blob, ignorar arquivos binários ou fornecidos, suprimir arquivos gerados em diffs e gerar gráficos de quebra de linguagem.
- 
  term: comentário em linha
  description: Comentário na pull request de uma linha de código.
- 
  term: delimitador
  description: >-
    Caractere invisível que simboliza o fim da linha em um arquivo de texto.
- 
  term: conta pessoal bloqueada
  description: >-
    Conta pessoal que não pode ser acessada pelo usuário. As contas ficam bloqueadas após o downgrade da modalidade paga para a grátis ou após o vencimento do plano da conta paga.
- 
  term: Console de gerenciamento
  description: >-
    Seção na interface do GitHub Enterprise que contém recursos administrativos.
- 
  term: markdown
  description: >-
    Markdown é um formato de arquivo semântico incrivelmente simples, não muito diferente dos formatos .doc, .rtf e .txt. O markdown facilita a gravação em texto até mesmo de pessoas sem experiência em publicação na web (inclusive com links, listas, marcadores etc.) e a exibição como site. O GitHub é compatível com markdown e usa um formato particular chamado "markdown em estilo GitHub". Consulte [Espec. markdown em estilo GitHub](https://github.github.com/gfm/) ou [Introdução à gravação e formatação no GitHub](/articles/getting-started-with-writing-and-formatting-on-github).
- 
  term: markup
  description: Sistema para anotar e formatar um documento.
- 
  term: main
  description: >-
    The default development branch. Whenever you create a Git repository, a branch named `main` is created, and becomes the active branch. In most cases, this contains the local development, though that is purely by convention and is not required.
- 
  term: mestre
  description: >-
    O branch padrão em muitos repositórios do Git. Por padrão, ao criar um novo repositório do Git na linha de comando um branch denominado "mestre" é criado. Muitas ferramentas agora usam um nome alternativo para o branch padrão. Por exemplo, quando você cria um novo repositório no GitHub, a branch padrão é chamada de "principal".
- 
  term: gráfico de integrantes
  description: Gráfico que exibe todas as bifurcações de um repositório.
- 
  term: menção
  description: >-
    Notificação enviada a um usuário adicionando o símbolo @ antes do nome. Usuários de uma organização no GitHub também podem integrar uma equipe mencionada.
- 
  term: merge
  description: >-
    A operação de merge aplica as alterações de um branch (no mesmo repositório ou em uma bifurcação) a outro. Em geral, isso acontece como uma "pull request" (que pode ser considerada como uma solicitação de merge) ou pela linha de comando. É possível fazer um merge via pull request pela interface web do GitHub.com, se não houver alterações conflitantes, ou pela linha de comando.
- 
  term: conflito de merge
  description: >-
    Diferença entre branches que passaram por merge. Os conflitos de merge ocorrem quando são feitas alterações diferentes na mesma linha do mesmo arquivo, ou quando uma pessoa edita um arquivo e outra exclui o mesmo arquivo. O conflito de merge deve ser resolvido antes de fazer o merge entre os branches.
- 
  term: marco
  description: >-
    Forma de acompanhar o progresso de grupos de problemas ou pull requests em um repositório.
- 
  term: espelho
  description: Uma nova cópia de um repositório.
- 
  term: equipe aninhada
  description: >-
    Equipe secundária de uma equipe principal. É possível ter várias equipes secundárias (ou aninhadas).
- 
  term: gráfico de rede
  description: >-
    Gráfico que exibe o histórico de branches de toda a rede do repositório, incluindo branches do repositório raiz e branches de bifurcações que contêm commits exclusivos da rede.
- 
  term: feed de notícias
  description: >-
    Exibição de atividade dos repositórios ou pessoas que você inspeciona. O feed de notícias da organização mostra a atividade nos repositórios pertencentes a ela.
- 
  term: non-fast-forward
  description: >-
    Quando a cópia local de um repositório não está sincronizada com o repositório upstream e você precisa fazer fetch das alterações de upstream antes de fazer push das alterações locais.
- 
  term: notificação
  description: >-
    Atualizações enviadas pela web ou por e-mail, dependendo das suas configurações, que informam sobre as atividades do seu interesse.
- 
  term: aplicativo OAuth
  description: >-
    Aplicativo de terceiros que usa tokens de acesso em vez de senhas para liberar o acesso dos usuários às informações.
- 
  term: token OAuth
  description: Token de acesso usado em aplicativos do OAuth para liberar o acesso dos usuários às informações.
- 
  term: colaborador externo
  description: >-
    Usuário que recebeu acesso a um ou mais repositórios de uma organização, mas não tem outro tipo de acesso à organização nem faz parte dela.
- 
  term: código aberto
  description: >-
    Software de código aberto é um software que pode ser usado, modificado e compartilhado livremente por qualquer pessoa. O conceito de "código aberto" costuma ir além do software para representar uma filosofia de colaboração, em que os materiais de trabalho são disponibilizados online para qualquer pessoa bifurcar, modificar, discutir e contribuir.
- 
  term: organização
  description: >-
    Organizações são grupos de dois ou mais usuários que geralmente refletem empresas reais. São administradas por usuários e podem ter repositórios e equipes.
- 
  term: proprietário da organização
  description: Usuários com acesso administrativo total à organização que possuem.
- 
  term: origem
  description: >-
    Repositório upstream padrão. A maioria dos projetos tem ao menos um projeto upstream rastreado. Por padrão, a origem é usada para esse propósito.
- 
  term: proprietário
  description: >-
    Integrantes da organização com acesso administrativo total à organização.
- 
  term: equipe principal
  description: >-
    Em equipes aninhadas, equipe principal da qual as equipes secundárias herdam as permissões de acesso e as @menções.
- 
  term: notificações de participação
  description: >-
    Notificação sobre uma atualização em uma conversa de um problema ou pull request em que seu nome de usuário ou equipe foi mencionado, ou em alguma resposta anterior sua na conversa.
- 
  term: permalink
  description: Hyperlink permanente estático para uma página da web.
- 
  term: conta pessoal
  description: >-
    Conta do GitHub pertencente a um usuário.
- 
  term: endereço de e-mail principal
  description: >-
    Endereço de e-mail principal para o qual o GitHub envia recibos, cobranças de cartão de crédito ou PayPal e outras comunicações relacionadas.
- 
  term: repositório fixo
  description: >-
    Repositório que o usuário decidiu exibir em destaque no perfil.
- 
  term: hooks pre-receive
  description: >-
    Scripts executados no servidor do GitHub Enterprise que podem ser usados para implementar verificações de qualidade.
- 
  term: contribuições privadas
  description: Contribuições feitas a um repositório privado (vs. público).
- 
  term: repositório privado
  description: >-
    Repositórios privados ficam visíveis somente para o proprietário do repositório e para os colaboradores especificados por ele.
- 
  term: branch de produção
  description: >-
    Branch com alterações finais prontas para uso ou implementação em um aplicativo ou site.
- 
  term: perfil
  description: Página que mostra informações sobre a atividade de um usuário no GitHub.
- 
  term: foto de perfil
  description: >-
    Imagem personalizada que o usuário carrega no GitHub para identificar sua atividade, geralmente acompanhada pelo nome de usuário. Também é conhecida como avatar.
- 
  term: quadro de projeto
  description: >-
    Quadros no GitHub compostos por problemas, pull requests e observações categorizados como cartões em colunas.
- 
  term: branch protegido
  description: >-
    Branches protegidos bloqueiam vários recursos do Git em um branch que o administrador do repositório decidir proteger. Eles não podem ser excluídos, passar por push, passar por merge sem revisão ou aprovação das verificações obrigatórias nem receber arquivos da interface web do GitHub. Em geral, o branch protegido é o branch padrão.
- 
  term: contribuições públicas
  description: Contribuições feitas a um repositório público (vs. privado).
- 
  term: repositório público
  description: >-
    Repositórios públicos podem ser vistos por qualquer pessoa, inclusive não usuários do GitHub.
- 
  term: pull
  description: >-
    O pull tem relação com os processos de fetch e merge das alterações. Por exemplo, se alguém editou o arquivo remote no qual você e outra pessoa estão trabalhando, você vai querer fazer pull dessas alterações em sua cópia local para atualizar o arquivo.
- 
  term: acesso pull
  description: Sinônimo de acesso de leitura.
- 
  term: pull request
  description: >-
    Pull requests são alterações propostas em um repositório enviadas por um usuário e que são aceitas ou rejeitadas pelos colaboradores do repositório. Assim como os problemas, as pull requests têm um fórum próprio de discussão.
- 
  term: revisão de pull request
  description: >-
    Comentários de colaboradores sobre uma pull request que aprovem as alterações ou solicitem outras alterações antes do merge da pull request.
- 
  term: gráfico Pulse
  description: Gráfico que mostra uma visão geral da atividade de um repositório.
- 
  term: gráfico Punch
  description: >-
    Gráfico que mostra a frequência de atualizações em um repositório conforme o dia da semana e a hora do dia.
- 
  term: push
  description: >-
    Fazer push significa enviar as alterações que passaram por commit para um repositório remote no GitHub.com. Por exemplo, se fizer alguma alteração local, você poderá fazer push para que outras pessoas tenham acesso a ela.
- 
  term: Fazer push de um branch
  description: >-
    Ao fazer push com sucesso de um branch para um repositório remote, você atualiza o branch remote com as alterações do branch local. Quando você faz "push de um branch", o Git procura a ref HEAD do branch no repositório remote e verifica se ela é ancestral direto da ref HEAD do branch local. Após a verificação, o Git faz pull de todos os objetos (acessíveis pela ref HEAD local e ausentes do repositório remote) dentro do banco de dados de objetos remote e atualiza a ref HEAD remote. Se o HEAD remote não for ancestral do HEAD local, a operação de push falha.
- 
  term: acesso push
  description: Sinônimo de acesso de gravação.
- 
  term: acesso de leitura
  description: >-
    Nível de permissão que permite ao usuário ler ou fazer pull das informações do repositório. Todos os repositórios públicos dão acesso de leitura a todos os usuários do GitHub. Sinônimo para acesso pull.
- 
  term: LEIAME
  description: Arquivo de texto com informações sobre os arquivos em um repositório, costuma ser o primeiro arquivo exibido aos visitantes do repositório. Com uma licença de repositório, diretrizes de contribuição e um código de conduta, o arquivo LEIAME ajuda a definir as expectativas e a gerenciar contribuições para o seu projeto.
- 
  term: rebase
  description: >-
    Reaplicar uma série de alterações de um branch para uma base diferente e redefinir o HEAD daquele branch para o resultado.
- 
  term: recuperação de contas em outro lugar
  description: >-
    Permite aos usuários adicionar uma camada de segurança extra à conta do GitHub em caso de perda do acesso à autenticação de dois fatores ou aos códigos de recuperação. Os usuários podem associar suas contas do GitHub às contas do Facebook armazenando uma credencial de autenticação em forma de token de recuperação para a conta do GitHub no Facebook.
- 
  term: código de recuperação
  description: Código que ajuda a recuperar o acesso à conta do GitHub.
- 
  term: versão
  description: Forma como o GitHub empacota e fornece software aos usuários.
- 
  term: remote
  description: >-
    Versão de um repositório ou branch hospedada em um servidor, provavelmente o GitHub.com. Versões remotas podem ser conectadas a clones locais de modo a permitir a sincronização das alterações.
- 
  term: repositório remote
  description: >-
    Repositório usado para monitorar o mesmo projeto, mas residindo em outro lugar.
- 
  term: URL remota
  description: >-
    Local onde seu código fica armazenado (repositório no GitHub, bifurcação de outro usuário ou até mesmo um servidor diferente).
- 
  term: réplica
  description: >-
    Instância do GitHub Enterprise que gera redundância para a instância principal do GitHub Enterprise.
- 
  term: repositório
  description: >-
    Repositórios são o elemento mais essencial do GitHub e podem ser imaginados como pastas de um projeto. O repositório contém todos os arquivos do projeto (inclusive a documentação) e armazena o histórico de revisão de cada arquivo. Repositórios podem ter vários colaboradores e podem ser públicos ou privados.
- 
  term: gráfico do repositório
  description: Representação visual dos dados do seu repositório.
- 
  term: mantenedor de repositório
  description: >-
    Pessoa que gerencia um repositório. Como tal, ela pode ajudar na triagem de problemas e usar etiquetas e outros recursos para gerenciar o trabalho do repositório. Também pode ser responsável por manter o LEIAME e os arquivos de contribuição atualizados.
- 
  term: revisão obrigatória de pull request
  description: >-
    As revisões obrigatórias garantem que as pull requests tenham ao menos uma revisão aprovada antes que os colaboradores possam fazer alterações em um branch protegido.
- 
  term: verificação de status obrigatória
  description: >-
    Verificações nas pull requests para garantir que todos os testes de CI sejam aprovados antes que os colaboradores possam fazer alterações em um branch protegido.
- 
  term: resolver
  description: Corrigir manualmente os problemas ocasionados por uma operação de merge com falha.
- 
  term: reverter
  description: >-
    Quando você reverte uma pull request no GitHub, uma nova pull request é aberta automaticamente, com um commit que reverte o commit do merge da pull request original. No Git, é possível reverter commits com `git revert`.
- 
  term: revisar
  description: >-
    As revisões permitem que pessoas com acesso ao seu repositório comentem as alterações propostas em pull requests, aprovem as alterações ou solicitem outras alterações antes do merge da pull request.
- 
  term: diretório raiz
  description: Primeiro diretório de uma hierarquia.
- 
  term: sistema de arquivos raiz
  description: Sistema operacional de base e ambiente de aplicativos do GitHub Enterprise.
- 
  term: resposta salva
  description: >-
    Comentário que você pode salvar e adicionar à conta de usuário para uso em problemas e pull requests do GitHub.
- 
  term: escopo
  description: >-
    Grupos nomeados de permissões que um aplicativo OAuth pode solicitar para acessar dados públicos e não públicos.
- 
  term: estação
  description: >-
    Usuário em uma organização do GitHub Enterprise. Também pode ser chamado de "consumo de licença".
- 
  term: equipe secreta
  description: >-
    Uma equipe que só fica visível para os outros integrantes da equipe e pessoas com permissões de proprietário.
- 
  term: log de segurança
  description: >-
    Log que relaciona as últimas 50 ações ou as ações executadas nos últimos 90 dias.
- 
  term: hook de serviço
  description: >-
    Também chamado de "webhook". Os webhooks permitem que notificações sejam entregues a um servidor web externo sempre que determinadas ações ocorrem em um repositório ou uma organização.
- 
  term: logon único
  description: >-
    Também chamado de SSO, permite ao usuário fazer login em um único local (um provedor de identidade, IdP) que libera o acesso a outros provedores de serviços.
- 
  term: instantâneo
  description: Ponto de verificação de uma máquina virtual em um momento específico.
- 
  term: combinação por squash
  description: Combinar vários commits em um só. Também é um comando do Git.
- 
  term: Chave SSH
  description: >-
    Chaves SSH são uma forma de identificar-se com um servidor on-line, usando uma mensagem criptografada. É como se o seu computador tivesse sua própria senha exclusiva para outro serviço. {% data variables.product.product_name %} usa chaves SSH para transferir informações de forma segura para o seu computador.
- 
  term: instância de preparo
  description: >-
    Maneira de testar as modificações antes de aplicá-las à instância do GitHub Enterprise.
- 
  term: status
  description: >-
    Representação visual em uma pull request indicativa de que os seus commit atendem às condições definidas para o repositório com o qual você está contribuindo.
- 
  term: Verificações de status
  description: >-
    Verificações de status são processos externos, como criações de integração contínua, que são executadas para cada commit que você fizer em um repositório. Para obter mais informações, consulte "[Verificações de status](/articles/about-status-checks)".
- 
  term: estrela
  description: >-
    Indicador ou amostra de apreciação por um repositório. As estrelas são uma forma manual de classificar a popularidade dos projetos.
- 
  term: assinatura
  description: Plano do GitHub para um usuário ou organização.
- 
  term: equipe
  description: >-
    Grupo de integrantes da organização que refletem sua empresa ou a estrutura do grupo com permissões de acesso em cascata e menções.
- 
  term: mantenedor de equipe
  description: >-
    Integrantes da organização com um subconjunto de permissões disponíveis para os proprietários da organização gerenciarem equipes.
- 
  term: plano de Equipe
  description: >-
    Plano de cobrança da organização que oferece um número ilimitado de repositórios privados e públicos.
- 
  term: linha do tempo
  description: Série de eventos em uma pull request ou em um perfil de usuário.
- 
  term: branch de tópico
  description: >-
    Branch regular do Git usado por desenvolvedores para identificar uma linha conceitual de desenvolvimento. Como os branches são muito simples e econômicos, muitas vezes é preferível ter vários branches pequenos, cada qual com conceitos muito bem definidos ou pequenas alterações incrementais relacionadas. Também conhecido como branch de recurso.
- 
  term: tópicos
  description: >-
    Uma forma de explorar repositórios em uma área de assunto específica, encontrar projetos com os quais contribuir e descobrir novas soluções para um problema específico no GitHub.
- 
  term: gráfico de tráfego
  description: >-
    Gráfico que mostra o tráfego de um repositório, inclusive clones totais (sem fetch), visitantes dos últimos 14 dias, sites de referência e conteúdo popular.
- 
  term: transferir
  description: >-
    Transferir um repositório significa alterar o proprietário de um repositório. O novo proprietário poderá administrar de imediato o conteúdo, os problemas, as pull request, as versões e as configurações do repositório.
- 
  term: upstream
  description: >-
    Quando mencionamos um branch ou bifurcação, o branch primário no repositório original é frequentemente denominado "upstream" (ou branch de origem), por ser o local principal de onde outras alterações virão. Por sua vez, o branch/bifurcação em que você está trabalhando é chamado de "downstream".
- 
  term: branch upstream
  description: >-
    Branch padrão que passa por merge no branch em questão (ou no qual o branch em questão passa por rebase). É configurado via `branch.<name>.remote` e `branch.<name>.merge`. Se o branch upstream de A for origem/B, pode-se dizer que "A está rastreando origem/B".
- 
  term: usuário
  description: >-
    Usuários são pessoas que têm contas pessoais do GitHub. Cada usuário tem um perfil pessoal e pode ter vários repositórios, públicos ou privados. Os usuários podem criar organização, ser convidados a participar de organizações ou colaborar nos repositórios de outros usuários.
- 
  term: nome de usuário
  description: Identificador de um usuário no GitHub.
- 
  term: equipe visível
  description: Equipe que pode ser vista e @mencionada por qualquer integrante da organização.
- 
  term: inspecionar
  description: >-
    Você pode inspecionar um repositório ou problema para receber notificações quando houver atualizações em problemas ou pull requests.
- 
  term: notificações de inspeção
  description: Notificação sobre atividades em um repositório ao qual o usuário se inscreveu.
- 
  term: notificações da web
  description: >-
    Notificações exibidas na interface web do GitHub: https://github.com/notifications
- 
  term: webhooks
  description: >-
    Os webhooks permitem criar ou configurar aplicativos do GitHub associados a determinados eventos no GitHub.com. Com os webhooks, é possível entregar notificações a um servidor da web externo sempre que determinadas ações ocorrem em um repositório ou organização. Também são conhecidos como hooks de serviço.
- 
  term: compatível com GitHub
  description: Listagem de integrações compatíveis com o GitHub.
- 
  term: acesso de gravação
  description: >-
    Nível de permissão que permite ao usuário fazer push de alterações ou gravá-las em um repositório.
