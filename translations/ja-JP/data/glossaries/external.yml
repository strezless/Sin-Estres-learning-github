---
- 
  term: '@メンション'
  description: ユーザ名の前に「@」を使用して GitHub 上の個人に通知。GitHub 上の Organization 内のユーザも、メンション可能な Team の一部になることができます。
- 
  term: アクセストークン
  description: >-
    Git 操作を HTTPS 経由で実行する際、Git がコマンドラインと API のいずれでも、パスワードの代わりに使用されるトークン。個人アクセストークンともいいます。
- 
  term: アカウントリカバリトークン
  description: >-
    Recover Accounts Elsewhere というアカウントリカバリセットアップの一部として格納される認証資格情報。このバックアップ資格情報を格納できるようにします。
- 
  term: APIプレビュー
  description: >-
    新規の API や既存の API メソッドへの変更が公式 GitHub API の一部になる前に試すための方法。
- 
  term: アプライアンス
  description: >-
    Just Enough Operating System（JeOS）と結合して業界標準ハードウェア（通常はサーバ）または仮想マシンで最適に動作するソフトウエアアプリケーション。
- 
  term: assignee
  description: Issue に割り当てられたユーザ。
- 
  term: 認証コード
  description: >-
    A code you'll supply, in addition to your GitHub password, when signing in with 2FA via the browser. This code is either generated by an application or delivered to your phone via text message. Also called a "2FA authentication code."
- 
  term: ベースブランチ
  description: プルリクエストをマージする際に変更が組み込まれるブランチ。プルリクエストを作成する際には、必要であればベースブランチをリポジトリのデフォルトブランチから他のブランチに変更できます。
- 
  term: Basic認証
  description: >-
    A method of authentication where the credentials are sent as unencrypted text.
- 
  term: 略歴
  description: >-
    The user-generated description found on a profile: [Adding a bio to your profile](/articles/adding-a-bio-to-your-profile)
- 
  term: 支払いサイクル
  description: 特定の支払いプランの時間間隔。
- 
  term: 支払い請求先メールアドレス
  description: >-
    GitHub から領収書やクレジットカードまたは PayPal の費用など支払い関連の連絡事項を送信する、Organization のメール アドレス。
- 
  term: 支払いマネージャー
  description: Organization の支払い設定を管理する Organization メンバー。
- 
  term: 支払いプラン
  description: >-
    ユーザおよび Organization の支払いプランで、プランの各タイプの機能セットを含むもの。
- 
  term: blame
  description: >-
    Git の「blame」機能とは、ファイルの各行で最後に行われた修正について説明するものであり、通常はリビジョン、作者、および日時を表示します。これは、機能が追加された日時や特定のバグを引き起こしたコミットを突き止める場合などに有用です。
- 
  term: ブロック
  description: >-
    ユーザから Organization のリポジトリでコラボレーションをする資格を削除すること。
- 
  term: ブランチ
  description: >-
    A branch is a parallel version of a repository. It is contained within the repository, but does not affect the primary or main branch allowing you to work freely without disrupting the "live" version. When you've made the changes you want to make, you can merge your branch back into the main branch to publish your changes.
- 
  term: ブランチ制限
  description: >-
    リポジトリの管理者が有効化できる制限で、特定のユーザまたは Team のみがブランチをプッシュしたりブランチに変更を加えたりできるようにするもの。
- 
  term: Businessプラン
  description: >-
    Organization の支払いプランで、無制限のパブリックリポジトリおよびプライベートリポジトリでのコラボレーションをすることや、Organization のメンバーに対し GitHub への SAML SSO を使用した認証を許可したり要求したりすることや、SAML or SCIM によるアクセスをプロビジョニングおよびデプロビジョニングすることができるもの。
- 
  term: CA証明書
  description: >-
    証明書認証局（CA）から発行されるデジタル証明書。2 つのマシン（ユーザのコンピュータと GitHub.com など）の間の有効な接続を確保し、サイトの所有権を検証します。
- 
  term: カード
  description: Issue またはプルリクエストに関連付けられたプロジェクトボード内にある、移動可能な正方形。
- 
  term: チェック
  description: >-
    チェックは、{% data variables.product.product_name %}上のステータスチェックの一種です。「[ステータスチェック](#status-checks)」を参照してください。
- 
  term: チェックアウト
  description: >-
    「git checkout」は、コマンドラインで使用して、新規ブランチを作成したり、作業中のブランチを別のブランチに変更したりします。「git checkout [branchname] [ファイルへのパス]」と指定すれば、別のブランチからファイルの別のバージョンに切り替えることができます。「チェックアウト」アクションでは、ワーキングツリーの全部または一部をオブジェクトデータベースのツリーオブジェクトまたは blob で更新します。また、ワーキングツリー全体が新規ブランチをポイントしている場合は、インデックスおよび HEAD を更新します。
- 
  term: チェリーピック（する）
  description: >-
    変更のサブセットを一連の変更（通常はコミット）から選択して、新しい一連の変更を別の codebase 上に記録すること。Git では、これは「git cherry-pick」コマンドで実行するもので、別のブランチ上に存在するコミットによって引き起された変更を抽出し、現在のブランチの先端に基づき新規コミットとして記録します。
- 
  term: 子チーム
  description: >-
    入れ子チーム内で、親チームのアクセス権限と@メンションを継承するサブチーム。
- 
  term: クリーン
  description: >-
    ワーキングツリーは、現在のHEADによって参照されるリビジョンに対応していればクリーンです。「ダーティ」も参照してください。
- 
  term: クローン
  description: >-
    クローンとは、コンピュータ上に存在するリポジトリのコピーです。ウェブサイトのサーバ上のどこかにあるのではなく、またそのコピーを作成する動作とも異なります。クローンを作成すると、お気に入りのエディタでファイルを編集できるようになり、オンラインになっていなくても Git を使用して変更を追跡できます。クローン作成元のリポジトリもリモートバージョンへの接続が切れることはないので、オンラインになればローカルでの変更をリモートにプッシュすることで同期が取れます。
- 
  term: クラスタリング
  description: >-
    複数のノードにわたって、また当該ノード間のロードバランスリクエスト間で、GitHub Enterprise サービスを実行する機能。
- 
  term: コード更新頻度グラフ
  description: >-
    リポジトリの履歴にある各週のコンテンツの追加と削除を表示するリポジトリグラフ。
- 
  term: 行動規範
  description: コミュニティへの参加方法の基準を定義したドキュメント。
- 
  term: コードオーナー'
  description: >-
    リポジトリのコードのある部分のオーナーに指名された個人。コードオーナーは、そのコードオーナーが所有するコードに対して変更を加えるプルリクエスト（ドラフトモードでないもの）を誰かがオープンした際、レビューをするよう自動的にリクエストされます。
- 
  term: コラボレータ
  description: >-
    コラボレータとは、リポジトリに対する読み取りおよび書き込みアクセスがあり、コントリビューションをするようリポジトリオーナーから招待されている個人です。
- 
  term: コミット
  description: >-
    A commit, or "revision", is an individual change to a file (or set of files). When you make a commit to save your work, Git creates a unique ID (a.k.a. the "SHA" or "hash") that allows you to keep record of the specific changes committed along with who made them and when. Commits usually contain a commit message which is a brief description of what changes were made.
- 
  term: コミット作者
  description: コミットをするユーザ。
- 
  term: コミットグラフ
  description: >-
    あるリポジトリに対して行われた過去 1 年間のすべてのコミットを表示するリポジトリグラフ。
- 
  term: コミットID
  description: 別名 SHA。コミットを特定する 40 文字のチェックサムハッシュ。
- 
  term: コミットメッセージ
  description: >-
    Short, descriptive text that accompanies a commit and communicates the change the commit is introducing.
- 
  term: 比較ブランチ
  description: >-
    プルリクエストを作成するのに使うブランチ。このブランチは、プルリクエストについて選択したベースブランチと比較され、変更分が特定されます。プルリクエストがマージされる際には、ベースブランチは比較ブランチからの変更分で更新されます。プルリクエストの「headブランチ」とも呼ばれます。
- 
  term: 継続的インテグレーション
  description: >-
    別名 CI。自動化されたビルドを実行し、GitHub 上に設定されたリポジトリに対して個人が変更をコミットしたらテストするプロセス。CI はソフトウェア開発で一般的なベストプラクティスであり、エラーの検出を支援します。
- 
  term: コントリビューショングラフ
  description: >-
    ユーザのプロフィールの一部であり、最大 1 年の期間にわたるコントリビューションを 1 日ごとに表示するもの。
- 
  term: コントリビューションガイドライン
  description: 各個人がプロジェクトにコントリビューションをする方法を説明したドキュメント。
- 
  term: コントリビューション
  description: >-
    Specific activities on GitHub that will: - Add a square to a user's contribution graph: "[What counts as a contribution](/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)" - Add activities to a user's timeline on their profile: "[Contribution activity](/articles/viewing-contributions-on-your-profile/#contribution-activity)"
- 
  term: コントリビューター
  description: >-
    コントリビュータとは、リポジトリへのコラボレーターアクセスはないが、プロジェクトへのコントリビューションをしており、 オープンしたプルリクエストがリポジトリにマージされた個人です。
- 
  term: コントリビュータグラフ
  description: リポジトリへのコントリビュータ上位 100 人を表示するリポジトリグラフ。
- 
  term: クーポン
  description: >-
    ユーザや Organization が全部または一部のプランの支払いをするのに使用できる、GitHub 提供のコード。
- 
  term: クーロン
  description: Unix のようなコンピュータオペレーティングシステムでの、時間ベースのジョブスケジューラ。
- 
  term: cURL
  description: データを転送するためにコマンドラインまたはスクリプトで使用。
- 
  term: ダッシュボード
  description: >-
    パーソナルダッシュボードは、GitHub上のアクティビティのメインハブです。パーソナルダッシュボードから、フォローまたは作業をしているIssueやプルリクエストを追跡したり、トップリポジトリやTeamページにアクセスしたり、Watchまたは参加しているリポジトリ内の最近のアクティビティについて学ぶことができます。また、フォローしているユーザーやStarしたリポジトリに基づいて推薦された、新しいリポジトリを発見することもできます。特定のOrganizationのアクティビティだけを見るには、Organizationのダッシュボードにアクセスしてください。詳しい情報については「[パーソナルダッシュボードについて](/articles/about-your-personal-dashboard)」もしくは「[Organizationダッシュボードについて](/articles/about-your-organization-dashboard)」を参照してください。
- 
  term: デフォルトブランチ
  description: >-
    The base branch for new pull requests and code commits in a repository. Each repository has at least one branch, which Git creates when you initialize the repository. The first branch is usually called `main`, and is often the default branch.
- 
  term: 依存グラフ
  description: >-
    パブリックリポジトリに依存するパッケージ、プロジェクト、リポジトリを表示するリポジトリグラフ。
- 
  term: 依存関係グラフ
  description: >-
    リポジトリが依存するパッケージおよびプロジェクトを表示するリポジトリグラフ。
- 
  term: デプロイキー
  description: >-
    デプロイキーとは、サーバに格納され、GitHub リポジトリ 1 つにアクセスを許可する SSH キーです。このキーはリポジトリに直接アタッチされ、個人のユーザアカウントの代わりとなります。
- 
  term: 切り離されたHEAD (detached HEAD)
  description: >-
    Git では、切り離された HEAD を変更しようとすると、Git ではブランチをポイントしていない、コミットをしてもコミット履歴には表示されない、という警告を発します。たとえば、任意のコミットをチェックアウトしても、それがどの特定のブランチでも最新のコミットではない場合、それは「切り離された HEAD」を変更しようとしているのです。
- 
  term: Diagnostics
  description: GitHub Enterprise インスタンスの設定および環境の概要。
- 
  term: diff
  description: >-
    diff とは、2 つのコミット（保存された変更）間での変更の差異です。diff では、最後のコミットから後にファイルで追加または削除されたものが視覚的に描写されます。
- 
  term: ダーティ
  description: >-
    ワーキングツリーは、現在のブランチに対してコミットされていない修正が含まれている場合、「ダーティ」と見なされます。
- 
  term: メール通知
  description: ユーザのメールアドレスに送信される通知。
- 
  term: Enterprise アカウント
  description: Enterprise アカウントは、複数の {% data variables.product.prodname_dotcom_the_website %} Organization のポリシーと支払いを集中管理するために利用できます。 {% data reusables.gated-features.enterprise-accounts %}
- 
  term: Explorer
  description: >-
    GraphiQL（「グラフィカルインタラクティブインブラウザ GraphQL IDE」のこと）のインスタンス。
- 
  term: fast-forward
  description: >-
    fast-forward とは特別なタイプのマージであり、リビジョンがあって別のブランチでの変更を「マージしようとしている」 が、その変更箇所が偶然に当のリビジョンの下位である場合に行われます。こうしたケースでは、新たなマージコミットはしない代わりに、単にそのリビジョンを更新します。これはリモートリポジトリのリモート追跡ブランチで頻繁に発生します。
- 
  term: フィーチャブランチ
  description: >-
    新しい機能の実験や本番環境にない Issue の修正に使用されるブランチ。トピックブランチともいいます。
- 
  term: コードブロック
  description: 'An indented block of code you can create with GitHub Flavored Markdown using triple backticks \`\`\` before and after the code block. See this [example](/articles/creating-and-highlighting-code-blocks#fenced-code-blocks).'
- 
  term: フェッチ
  description: >-
    「git fetch」を使用するのは、ローカルで変更中のブランチにリモートリポジトリから変更をコミットなしで追加する場合です。「git pull」とは異なり、フェッチすると、ローカルブランチに対してコミットする前に変更をレビューすることができます。
- 
  term: フォロー
  description: 別のユーザのコントリビューションとアクティビティについて通知を受けること。
- 
  term: フォースプッシュ
  description: >-
    コンフリクトを考慮せずにリモートリポジトリをローカルでの変更で上書きする git push。
- 
  term: フォーク
  description: >-
    フォークとは、個人が別のユーザのリポジトリをコピーしたものであり、その個人のアカウントに存在します。フォークであれば、元の上流リポジトリに影響を与えることなしに、プロジェクトに対して自由に変更を加えることができます。また、いずれのリポジトリも接続は切れていないので、上流リポジトリでプルリクエストをオープンしてフォークと最新の変更とが常に同期されるようにすることもできます。
- 
  term: Freeプラン
  description: >-
    ユーザアカウントの支払いプランで、無料のもの。ユーザがコラボレーションできるパブリックリポジトリは無制限、コラボレータも無制限です。
- 
  term: Gist
  description: >-
    A gist is a shareable file that you can edit, clone, and fork on GitHub. You can make a gist {% if currentVersion == "github-ae@latest" %}internal{% else %}public{% endif %} or secret, although secret gists will be available to {% if currentVersion == "github-ae@latest" %}any enterprise member{% else %}anyone{% endif %} with the URL.
- 
  term: Git
  description: >-
    Git とは、テキストファイルでの変更を追跡するためのオープンソースプログラムです。Linux オペレーティングシステムの作者によって記述された、この重要な技術の上に、ソーシャルおよびユーザインターフェース GitHub は構築されているのです。
- 
  term: GitHub App
  description: >-
    GitHub App は、Organization 全体に対してサービスを提供し、その機能を実行する際は独自の ID を使用します。Organization や ユーザアカウントに直接インストールでき、特定のリポジトリへのアクセス権を付与できます。精細なアクセス権限が付いており、webhook が組み込まれています。
- 
  term: GitHub Flavored Markdown
  description: GitHub 特有の Markdown であり、GitHub 全体で文章やコードをフォーマットするのに使用されます。[GitHub Flavored Markdown の仕様](https://github.github.com/gfm/)または [GitHub で書き、フォーマットしてみる](/articles/getting-started-with-writing-and-formatting-on-github)を参照。
- 
  term: GitHub Importer
  description: >-
    ソースコードリポジトリ（コミットやリビジョン履歴を含む）を素早くインポートするツール。
- 
  term: GitHub Jobs
  description: >-
    GitHub ユーザが興味を持ちそうなジョブを雇用者がポストできる GitHub サイト。
- 
  term: GitHub Marketplace
  description: >-
    GitHub ユーザや Organization がワークフローを拡張したり補足したりするアプリケーションを購入してインストールするためのサブサイト。
- 
  term: GitHub Pages
  description: >-
    別名 Pages。個人、Organization、またはプロジェクトのページを GitHub リポジトリから直接ホストするように設計された静的サイトホスティングサービス。
- 
  term: GitHub Wiki
  description: wiki スタイルのドキュメントを GitHub リポジトリ上でホストするためのセクション。
- 
  term: gitfile
  description: >-
    プレーン「.git」ファイル。常にワーキングツリーのルートにあり、Git ディレクトリ（Git リポジトリとそのメタデータの全体がある）をポイントします。このファイルは、自分のリポジトリ、実リポジトリであれば、コマンドラインで「git rev-parse --git-dir」によって表示できます。
- 
  term: GraphQL
  description: >-
    API のクエリ言語、およびそのクエリに既存のデータを入力するためのランタイム。
- 
  term: HEAD
  description: ブランチの定義済みコミット。通常はブランチの先頭にある最新のコミットです。
- 
  term: headブランチ
  description: プルリクエストをマージする際にベースブランチに変更が組み込まれるブランチ。「比較ブランチ」とも呼ばれます。
- 
  term: 'Hello, World'
  description: >-
    「Hello, World!」プログラムは、ユーザに対し「Hello, World!」を出力または表示するコンピュータプログラムです。このプログラムは非常にシンプルであることが多く、プログラミング言語の基本構文の例としてよく使用され、新しいプログラミング言語の学習で一般的な最初の演習となります。
- 
  term: High Availability
  description: >-
    動作を長時間継続することが望ましいシステムまたはコンポーネント。
- 
  term: フック
  description: >-
    いくつかの Git コマンドでは、通常の実行中にオプションのスクリプトが呼び出され、開発者が機能やチェックを追加できるようになります。通常は、フックによってコマンドが事前検証され、場合によっては中止され、 また動作の完了後に事後通知がされるようになります。
- 
  term: ホスト名
  description: >-
    ネットワークに接続されているデバイスのアドレスに対応する、人間が読めるニックネーム。
- 
  term: アイデンティコン
  description: >-
    ユーザが GitHub にサインアップした際にデフォルトのプロフィール画像として使用される、自動生成された画像。ユーザは自分のアイデンティコンを独自のプロフィール画像に置き換えることができます。
- 
  term: アイデンティティプロバイダ
  description: >-
    別名 IdP。ウェブサイトへのアクセスに SAML シングルサインオン（SSO）を使用できるようにする、信頼されているプロバイダ。
- 
  term: インスタンス
  description: >-
    Organization による GitHub のプライベートコピー。Organization で設定して制御する仮想マシン内に含まれています。
- 
  term: インテグレーション
  description: >-
    サードパーティ製アプリケーションで、GitHub に統合されるもの。GitHub App、OAuth App、webhook などです。
- 
  term: Issue
  description: >-
    Issue とは、 リポジトリに関して提起された改善、タスクまたは質問です。Issue は（パブリックリポジトリについては）誰でも作成でき、リポジトリコラボレータによるモデレーションがされます。Issue ごとに専用のディスカッションスレッドが含まれます。Issue をラベルによって分類すれば、誰かに割り当てることもできます。
- 
  term: Jekyll
  description: 個人、Organization、またはプロジェクトのサイト向け静的サイトジェネレータ。
- 
  term: Jekyll テーマ選択画面
  description: >-
    Jekyll サイトで CSS ファイルを編集したりコピーしたりせずにビジュアルテーマを選択するための、自動化された方法。
- 
  term: キーフィンガープリント
  description: 長い公開鍵を識別するのに使用される、短いシーケンスのバイト。
- 
  term: キーチェーン
  description: macOS のパスワード管理システム。
- 
  term: キーワード
  description: プルリクエスト内で使用される場合に Issue をクローズする、特定のワード。
- 
  term: ラベル
  description: >-
    Issue またはプルリクエストのタグ。リポジトリにはデフォルトで少数のラベルが付いてきますが、ユーザはカスタムラベルを作成できます。
- 
  term: LFS
  description: >-
    Git Large File Storage。大きいファイルのバージョン管理に向けた Git のオープンソース拡張。
- 
  term: ライセンス
  description: >-
    ソースコードでできることとできないこととを各個人に把握してもらうために、プロジェクトに含めるドキュメント。
- 
  term: Linguist
  description: >-
    GitHub で使用されるライブラリであり、blob 言語を検出し、バイナリファイルやベンダーされたファイルを無視し、diff で生成されたファイルを非表示にし、言語別グラフを生成するもの。
- 
  term: 行コメント
  description: プルリクエスト内でコードの特定の行にあるコメント。
- 
  term: 行終端
  description: >-
    テキストファイルの行末をシンボル化した、1 つ以上の非表示文字。
- 
  term: ロックされた個人アカウント
  description: >-
    ユーザがアクセスできない個人アカウント。ユーザが有料アカウントを無料のものにダウングレードした場合、または有料プランの支払いが期限を過ぎた場合、アカウントはロックされます。
- 
  term: Management Console
  description: >-
    GitHub Enterprise インターフェース内で、管理機能を含むセクション。
- 
  term: Markdown
  description: >-
    Markdown は非常にシンプルでセマンティックファイル形式であり、.doc、.rtf 、.txtと大差ありません。Markdown はウェブパブリッシングの素養がない人でも簡単に文章（リンク、リスト、箇条書きなど）を書いたりウェブサイトのように表示したりできます。GitHub では Markdown をサポートしており、GitHub Flavored Markdown という特定の形式の Markdown を使用します。[GitHub Flavored Markdown の仕様](https://github.github.com/gfm/)または [GitHub で書き、フォーマットしてみる](/articles/getting-started-with-writing-and-formatting-on-github)を参照。
- 
  term: マークアップ
  description: ドキュメントのアノテーションおよびフォーマットのためのシステム。
- 
  term: main
  description: >-
    The default development branch. Whenever you create a Git repository, a branch named `main` is created, and becomes the active branch. In most cases, this contains the local development, though that is purely by convention and is not required.
- 
  term: master
  description: >-
    The default branch in many Git repositories. By default, when you create a new Git repository on the command line a branch called `master` is created. Many tools now use an alternative name for the default branch. For example, when you create a new repository on GitHub the default branch is called `main`.
- 
  term: メンバーグラフ
  description: リポジトリのすべてのフォークを表示するリポジトリグラフ。
- 
  term: メンション
  description: >-
    ユーザ名の前に @ 記号を付けることによってユーザに送信される通知。GitHub 上の Organization 内のユーザも、メンション可能な Team の一部になることができます。
- 
  term: マージ
  description: >-
    マージとは、1 つのブランチから（同じリポジトリ内で、またはフォークから）変更を取得し、その変更を別のブランチに適用することです。これは多くの場合、「プルリクエスト」として（マージのリクエストと考えることができます）、またはコマンドライン経由で発生します。マージは、コンフリクトのある変更がない場合、GitHub.com ウェブインターフェース経由のプルリクエストによって実行できます。コマンドライン経由なら、いつでも実行できます。
- 
  term: マージコンフリクト
  description: >-
    マージされるブランチ間で起こる差異。マージコンフリクトが発生するのは、複数の個人が同じファイルの同じ行に異なった変更を加えた場合や、ある個人があるファイルを編集して別の個人がそれと同じファイルを削除した場合です。マージコンフリクトが解決されないと、ブランチをマージできません。
- 
  term: マイルストーン
  description: >-
    リポジトリ内にある Issue やプルリクエストのグループに関する進行状況を追跡するための方法。
- 
  term: ミラー
  description: リポジトリの新規コピー。
- 
  term: 入れ子チーム
  description: >-
    親チームの子チーム。子（または入れ子）チームは複数持つことができます。
- 
  term: ネットワークグラフ
  description: >-
    リポジトリネットワーク全体のブランチ履歴を表示するリポジトリグラフ。ルートリポジトリのブランチと、ネットワークに固有のコミットを含むフォークのブランチが含まれます。
- 
  term: ニュースフィード
  description: >-
    Watch しているリポジトリまたは個人のアクティビティビュー。Organization のニュースフィードには、Organization が所有するリポジトリでのアクティビティが表示されます。
- 
  term: non-fast-forward
  description: >-
    リポジトリのローカルコピーが上流リポジトリと同期されていないこと。ローカルの変更をプッシュする前に、上流の変更をフェッチする必要があります。
- 
  term: 通知
  description: >-
    Updates, delivered by either the web or email depending on your settings, that give you information about the activities you're interested in.
- 
  term: OAuth App
  description: >-
    ユーザにまつわる情報にアクセスするためにパスワードよりもアクセストークンを使用するサードパーティアプリケーション。
- 
  term: OAuthトークン
  description: OAuth App でユーザにまつわる情報にアクセスするために使用されるアクセストークン。
- 
  term: 外部のコラボレータ
  description: >-
    Organization の 1 つ以上のリポジトリに対するアクセス権が付与されているが、その Organization に対する他のアクセス権がなく、その Organization のメンバーでもないユーザ。
- 
  term: オープンソース
  description: >-
    オープンソースソフトウェアとは、誰でも自由に使用、修正、および（修正済みと未修正のいずれの形式でも）共有できるソフトウェアです。今日では、「オープンソース」の概念はソフトウェアの枠を超えてコラボレーションの哲学をいうことが多く、そのコラボレーションの素材について誰でもオンラインでフォーク、修正、ディスカッション、コントリビューションができます。
- 
  term: Organization
  description: >-
    Organization とは 2 人以上のユーザのグループであり、通常は実際の組織をミラーしたものです。ユーザによって管理され、リポジトリと Team のいずれも含めることができます。
- 
  term: Organizationのオーナー
  description: 所有する Organization の管理機能にフルアクセスできるユーザ。
- 
  term: origin
  description: >-
    デフォルトの上流リポジトリ。ほとんどのプロジェクトでは少なくとも上流プロジェクトを 1 つ追跡しています。デフォルトでは、origin がその目的に使用されます。
- 
  term: コードオーナー
  description: >-
    Organization の管理機能にフルアクセスできる Organization メンバー。
- 
  term: 親チーム
  description: >-
    入れ子チーム内で、子チームによるアクセス権限と@メンションの継承元になっているメイン Team。
- 
  term: 参加通知
  description: >-
    ユーザ名または Team がメンションされたか以前にコメントで返信した Issue またはプルリクエスト内の会話にある、アップデートについての通知。
- 
  term: パーマリンク
  description: 特定のウェブページへの永続的な静的ハイパーリンク。
- 
  term: 個人アカウント
  description: >-
    個々のユーザに帰属する GitHub アカウント。
- 
  term: プライマリメールアドレス
  description: >-
    GitHub から領収書やクレジットカードまたは PayPal の料金など支払い関連の連絡事項を送信するメインメールアドレス。
- 
  term: 固定リポジトリ
  description: >-
    ユーザがプロフィール内で目立たせて表示するよう決定したリポジトリ。
- 
  term: pre-receive フック
  description: >-
    GitHub Enterpriseサーバ上で動作するスクリプトで、品質チェックの実装に利用できるもの。
- 
  term: プライベートコントリビューション
  description: プライベート（パブリックでなく）リポジトリに対して行われるコントリビューション。
- 
  term: プライベートリポジトリ
  description: >-
    プライベートリポジトリは、コードオーナーが指定したリポジトリオーナーおよびコラボレータのみが参照できます。
- 
  term: 本番ブランチ
  description: >-
    使用またはアプリケーションやサイトへデプロイするための準備ができている最終変更のあるブランチ。
- 
  term: プロフィール
  description: GitHub 上でのユーザのアクティビティについての情報を表示するページ。
- 
  term: プロフィール画像
  description: >-
    ユーザが GitHub にアップロードするカスタム画像で、アクティビティを特定するもの。通常はユーザ名に付随します。これはアバターとしても参照されます。
- 
  term: プロジェクトボード
  description: >-
    列内でカードに分類される Issue、プルリクエスト、ノートから成る、GitHub 内のボード。
- 
  term: 保護されたブランチ
  description: >-
    保護されたブランチとは、リポジトリ管理者が保護するよう選択したブランチ上で Git のいくつかの機能がブロックされているものです。フォースプッシュ、削除、必須のチェックをパスしていないか必須の承認済みレビューがない変更をマージすること、ファイルを GitHub からアップロードすることはできません。ウェブインターフェースから 保護されたブランチは通常、デフォルトブランチです。
- 
  term: パブリックコントリビューション
  description: パブリック（プライベートでなく）リポジトリに対して行われるコントリビューション。
- 
  term: パブリックリポジトリ
  description: >-
    パブリックリポジトリは、GitHub ユーザでない個人を含め、誰でも参照できます。
- 
  term: プル
  description: >-
    プルとは、変更をフェッチしてマージすることをいいます。たとえば、誰かがリモートファイルを編集したが自分もそのファイルを変更している場合に、その変更を自分のローカルコピーにプルして、最新の状態になるようにします。フェッチも参照。
- 
  term: プルアクセス
  description: 読み取りアクセスの同義語。
- 
  term: プルリクエスト
  description: >-
    プルリクエストとは、リポジトリに対して提案された変更のことです。ユーザがサブミットし、リポジトリのコラボレータが受け入れるか拒否します。Issue と同様、プルリクエストにはそれぞれ独自のディスカッションフォーラムがあります。
- 
  term: Pull Requestレビュー
  description: >-
    プルリクエストについてのコラボレータからのコメントで、変更を受け入れたり、プルリクエストがマージされる前にさらなる変更をリクエストしたりするもの。
- 
  term: パルスグラフ
  description: リポジトリのアクティビティの概要を示すリポジトリグラフ。
- 
  term: パンチグラフ
  description: >-
    リポジトリへのアップデートの頻度を曜日または 1 日内の時間に基づいて表示するリポジトリグラフ。
- 
  term: プッシュ
  description: >-
    プッシュとは、コミットした変更を GitHub.com 上のリモートリポジトリに送信することをいいます。たとえば、ローカルで何かを変更した場合、他の人がその変更にアクセスできるようプッシュします。
- 
  term: ブランチをプッシュ
  description: >-
    リモートリポジトリへのブランチのプッシュに成功すると、リモートブランチをローカルブランチからの変更分で更新することになります。「ブランチをプッシュ」すると、Gitはリモートリポジトリ中のブランチのHEAD refを探し、それがブランチのローカルのHEAD refの直接の先祖であることを検証します。検証されれば、Gitはすべてのオブジェクト（ローカルのHEAD refから到達でき、リモートのリポジトリにないもの）をリモートオブジェクトデータベースにプッシュし、そしてリモートのHEAD refを更新します。リモートのHEADがローカルのHEADの先祖でなければ、プッシュは失敗します。
- 
  term: プッシュアクセス
  description: 書き込みアクセスの同義語。
- 
  term: 読み取りアクセス
  description: >-
    リポジトリ上の権限レベルで、リポジトリからの情報をプルする（読み取る）ことをユーザに許可するもの。すべてのパブリックリポジトリでは、すべての GitHub ユーザに読み取りアクセスを付与します。プルアクセスの同義語。
- 
  term: README
  description: リポジトリにあるファイルについての情報を記載したテキストファイルで、通常の場合、リポジトリの訪問者へ最初に表示されるファイル。README ファイルと、リポジトリライセンス、コントリビューションガイドライン、行動規範は、プロジェクトについて期待されることを共有したりコントリビューションを管理したりすることを支援します。
- 
  term: リベース
  description: >-
    ブランチからの一連の変更を異なるベースに再適用し、そのブランチのHEADをその結果にリセットすること。
- 
  term: Recovery Accounts Elsewhere
  description: >-
    ユーザに対し、2 要素認証方法やリカバリコードへのアクセスを失った場合に備えて、自分の GitHub アカウントにセキュリティ要素をさらに追加することを許可するもの。ユーザは自分の GitHub アカウントの認証の資格情報をアカウントリカバリトークンの形で Facebook に格納すれば、GitHub アカウントを Facebook アカウントに関連付けることができます。
- 
  term: リカバリコード
  description: GitHub アカウントへのアクセスを再取得できるようにするコード。
- 
  term: リリース
  description: GitHub での、ソフトウェアをパッケージ化してユーザに提供する方法。
- 
  term: リモート
  description: >-
    これは、サーバ（大体は GitHub.com）上でホストされるリポジトリやブランチのバージョンです。変更が同期されるようにするには、リモートバージョンをローカルのクローンに接続します。
- 
  term: リモートリポジトリ
  description: >-
    別の場所にある同じプロジェクトを追跡するのに使用されるリポジトリ。
- 
  term: リモートURL
  description: >-
    コードが格納されている場所。GitHub 上のリポジトリや別のユーザのフォーク、あるいは別のサーバという場合もあります。
- 
  term: レプリカ
  description: >-
    GitHub Enterprise のプライマリインスタンスに対し冗長性を与える GitHub Enterprise インスタンス。
- 
  term: リポジトリ
  description: >-
    リポジトリは GitHub の最も基本的な要素です。プロジェクトのフォルダとして最も想像しやすいものです。リポジトリ 1 つに（ドキュメントを含む）すべてのプロジェクトファイルが含まれ、各ファイルのリビジョン履歴が格納されます。リポジトリはコラボレータを複数持つことができ、またパブリックとプライベートのいずれの場合もあります。
- 
  term: リポジトリグラフ
  description: リポジトリのデータの視覚的表現。
- 
  term: リポジトリメンテナ
  description: >-
    リポジトリを管理する個人。この個人は、Issue のトリアージやラベルの使用など、リポジトリでの変更を管理するための機能を支援します。また、この個人は、README の保持やアップデートされたファイルのコントリビューションに対する責任を負います。
- 
  term: Pull Requestレビュー必須
  description: >-
    必須レビューにより、保護されたブランチにコラボレーターが変更を加える前に、プルリクエストには少なくとも 1 つの承認済みレビューが存在するようになります。
- 
  term: ステータスチェック必須
  description: >-
    プルリクエストに対するチェックで、コラボレータが保護されたブランチに変更を加える前に、すべての必須 CI テストにパスしているようにするもの。
- 
  term: 解決
  description: 失敗した自動マージによって残されたものを手動で修正するアクション。
- 
  term: 打ち消し
  description: >-
    GitHub 上でプルリクエストの打ち消しをすると、新たなプルリクエストが自動でオープンし、そこには元のマージ済みプルリクエストにあるマージコミットを打ち消すコミットが 1 つ含まれます。Git では、「git revert」でコミットを打ち消します。
- 
  term: レビュー
  description: >-
    レビューにより、他の人でも、リポジトリへのアクセス権限があれば、プルリクエストで提案されている変更に対してコメントしたり、変更を承認したり、プルリクエストがマージされる前にさらなる変更をリクエストしたりできます。
- 
  term: ルートディレクトリ
  description: 階層の最初にあるディレクトリ。
- 
  term: ルートファイルシステム
  description: 基本オペレーティングシステムと GitHub Enterprise アプリケーション環境。
- 
  term: 返信テンプレート
  description: >-
    GitHub 全体にわたって Issue とプルリクエストに使用できるよう、保存して GitHub ユーザアカウントに追加することのできるコメント。
- 
  term: スコープ
  description: >-
    OAuth App がパブリックと非パブリックの両方のデータへのアクセスをリクエストできるようにする権限をグループにして、名前を付けたもの。
- 
  term: シート
  description: >-
    GitHub Enterprise の Organization 内のユーザ。これは「シート数」ということもあります。
- 
  term: シークレットチーム
  description: >-
    Team の他の個人とコードオーナー権限のある個人のみに表示される Team。
- 
  term: セキュリティログ
  description: >-
    直近の 50 個のアクションまたは過去 90 日間に実行されたアクションを一覧表示するログ。
- 
  term: サービスフック
  description: >-
    「webhook」ともいいます。webhook により、特定のアクションがリポジトリあるいはOrganizationで発生したら必ず外部のウェブサーバへ通知を配信するための方法が得られます。
- 
  term: シングルサインオン
  description: >-
    SSO ともいいます。ある 1 つの場所 - アイデンティティプロバイダ（IdP）- へのサインインをユーザに許可してから、そのユーザに他のサービスプロバイダへのアクセス権限を付与します。
- 
  term: スナップショット
  description: ある時点での仮想マシンのチェックポイント。
- 
  term: squash
  description: 複数のコミットを結合して 1 つのコミットにすること。Git コマンドでもあります。
- 
  term: SSH キー
  description: >-
    SSH キーとは、暗号化されたメッセージを使用して、自身をオンラインサーバに識別させるための方法です。ご使用のコンピュータが、あたかも別のサービスへの一意のパスワードを独自に持っているかのようになります。{% data variables.product.product_name %}では SSH キーを使用して、ご使用のコンピュータに情報を安全に送信します。
- 
  term: ステージングインスタンス
  description: >-
    変更を実際の GitHub Enterprise インスタンスに適用する前にテストするための方法。
- 
  term: ステータス
  description: >-
    コミットがコントリビューション先リポジトリに設定されている条件を満たしていることを、プルリクエスト内で視覚的に表現したもの。
- 
  term: ステータスチェック
  description: >-
    ステータスチェックは、継続的インテグレーションのビルドのような外部プロセスで、リポジトリにコミットを行うたびに実行されます。詳しい情報については「[ステータスチェックについて](/articles/about-status-checks)」を参照してください。
- 
  term: Star
  description: >-
    ブックマーク、またはリポジトリについての感謝の表示。Star とは、プロジェクトの人気度を手動でランク付けする方法です。
- 
  term: プラン
  description: ユーザまたは Organization の GitHub プラン。
- 
  term: Team
  description: >-
    Organization メンバーのグループ。アクセス権限とメンションのカスケードによって、会社やグループの構造を反映します。
- 
  term: チームメンテナ
  description: >-
    Organizationのオーナーが Team の管理に使用できる権限のサブセットが付与されているOrganization メンバー。
- 
  term: Teamプラン
  description: >-
    Organization の支払いプランで、パブリックリポジトリとプライベートリポジトリの取得に制限がないもの。
- 
  term: タイムライン
  description: プルリクエストまたはユーザプロフィールでの一連のイベント。
- 
  term: トピックブランチ
  description: >-
    開発者が開発のコンセプチュアルラインを定めるのに使用する一般的な Git ブランチ。ブランチは簡便で安価なので、多くの場合、小さめのブランチをいくつか設け、それぞれに十分定義されているコンセプトや、小さくてインクリメンタルだが関連する変更を持たせるのが望ましいです。フィーチャブランチと呼ぶこともあります。
- 
  term: Topics
  description: >-
    GitHub で、特定の領域に関するリポジトリを調べたり、コントリビュートするプロジェクトを探したり、特定の問題に対する新たなソリューションを見つけ出したりするための方法。
- 
  term: トラフィックグラフ
  description: >-
    フルクローン（フェッチではない）、過去 14 日間の訪問者、参照サイト、人気コンテンツなど、リポジトリのトラフィックを表示するリポジトリグラフ。
- 
  term: 移譲
  description: >-
    リポジトリの移譲とは、リポジトリのオーナーを変更することです。新しいオーナーはすぐに、リポジトリのコンテンツ、Issue、プルリクエスト、リリース、設定を管理できるようになります。
- 
  term: 上流
  description: >-
    ブランチまたはフォークについていう場合、元のリポジトリのプライマリブランチは、多くの場合「上流」といいます。他の変更の取得元となる主要な場所であるためです。よって、変更しているブランチ/フォークは「下流」と呼びます。origin も参照。
- 
  term: 上流ブランチ
  description: >-
    問題のブランチ（または問題のブランチのリベース先）にマージされるデフォルトブランチ。「branch.<name>.remote」および「branch.<name>.merge」で設定されます。A の上流ブランチが origin/B であるとすると、「A が origin/B を追跡している」と言うことがあります。
- 
  term: ユーザ
  description: >-
    ユーザとは、GitHub の個人アカウントを持つ個人です。各ユーザには個人プロフィールがあり、複数のリポジトリを（パブリックでもプライベートでも）所有できます。 Organization への参加や別のユーザのリポジトリでのコラボレーションを作成することができ、また招待されることもあります。
- 
  term: ユーザ名
  description: GitHub 上でのユーザのハンドル。
- 
  term: 参照可能なチーム
  description: Organization の各メンバーが表示および @メンションできる Team。
- 
  term: Watch
  description: >-
    リポジトリや Issue を Watch すれば、Issue やプルリクエストにアップデートがあった際に通知を受け取ることができます。
- 
  term: Watch対象の通知
  description: ユーザがサブスクライブしているリポジトリでのアクティビティについての通知。
- 
  term: Web通知
  description: >-
    GitHubのウェブインターフェースに表示される通知（https://github.com/notifications）
- 
  term: webhook
  description: >-
    webhook は、GitHub.com の特定のイベントにサブスクライブする GitHub App のビルドやセットアップができるようにするものです。webhook により、特定のアクションがリポジトリあるいはOrganizationで発生したら必ず外部のウェブサーバへ通知を配信するための方法が得られます。サービスフックともいいます。
- 
  term: Works with GitHub
  description: GitHub で行うインテグレーションの一覧。
- 
  term: 書き込みアクセス
  description: >-
    リポジトリの権限レベルで、リポジトリへのプッシュ、書き込み、変更をユーザに許可するもの。
